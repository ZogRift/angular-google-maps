{"version":3,"file":"agm-core.mjs","sources":["../../../packages/core/src/lib/services/google-maps-types.ts","../../../packages/core/src/lib/map-types.ts","../../../packages/core/src/lib/services/maps-api-loader/maps-api-loader.ts","../../../packages/core/src/lib/services/google-maps-api-wrapper.ts","../../../packages/core/src/lib/services/managers/circle-manager.ts","../../../packages/core/src/lib/services/managers/data-layer-manager.ts","../../../packages/core/src/lib/services/fit-bounds.ts","../../../packages/core/src/lib/services/geocoder-service.ts","../../../packages/core/src/lib/utils/browser-globals.ts","../../../packages/core/src/lib/services/maps-api-loader/lazy-maps-api-loader.ts","../../../packages/core/src/lib/services/managers/marker-manager.ts","../../../packages/core/src/lib/services/managers/info-window-manager.ts","../../../packages/core/src/lib/services/managers/kml-layer-manager.ts","../../../packages/core/src/lib/services/managers/layer-manager.ts","../../../packages/core/src/lib/services/maps-api-loader/noop-maps-api-loader.ts","../../../packages/core/src/lib/utils/mvcarray-utils.ts","../../../packages/core/src/lib/services/managers/polygon-manager.ts","../../../packages/core/src/lib/services/managers/polyline-manager.ts","../../../packages/core/src/lib/services/managers/rectangle-manager.ts","../../../packages/core/src/lib/directives/bicycling-layer.ts","../../../packages/core/src/lib/directives/circle.ts","../../../packages/core/src/lib/directives/data-layer.ts","../../../packages/core/src/lib/directives/fit-bounds.ts","../../../packages/core/src/lib/directives/info-window.ts","../../../packages/core/src/lib/directives/kml-layer.ts","../../../packages/core/src/lib/directives/map.ts","../../../packages/core/src/lib/directives/marker.ts","../../../packages/core/src/lib/directives/polygon.ts","../../../packages/core/src/lib/directives/polyline-icon.ts","../../../packages/core/src/lib/directives/polyline-point.ts","../../../packages/core/src/lib/directives/polyline.ts","../../../packages/core/src/lib/directives/rectangle.ts","../../../packages/core/src/lib/directives/transit-layer.ts","../../../packages/core/src/lib/core.module.ts","../../../packages/core/src/public-api.ts","../../../packages/core/src/agm-core.ts"],"sourcesContent":["export var google: any;\r\n\r\nexport interface MVCObject {\r\n  addListener(eventName: string, handler: Function): MapsEventListener;\r\n}\r\n\r\nexport interface MVCArray<T> extends MVCObject {\r\n  clear(): void;\r\n  getArray(): Array<T>;\r\n  getAt(i: number): T;\r\n  getLength(): number;\r\n  insertAt(i: number, elem: T): void;\r\n  pop(): T;\r\n  push(elem: T): number;\r\n  removeAt(i: number): T;\r\n  setAt(i: number, elem: T): void;\r\n  /* tslint:disable */\r\n  /*\r\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\r\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\r\n  */\r\n  forEach(callback: (elem: T, i: number) => void): void;\r\n  /* tslint:enable */\r\n}\r\n\r\nexport interface GoogleMap extends MVCObject {\r\n  data?: Data;\r\n  panTo(latLng: LatLng | LatLngLiteral): void;\r\n  panBy(x: number, y: number): void;\r\n  setZoom(zoom: number): void;\r\n  getCenter(): LatLng;\r\n  setCenter(latLng: LatLng | LatLngLiteral): void;\r\n  getBounds(): LatLngBounds;\r\n  getMapTypeId(): MapTypeId;\r\n  getZoom(): number;\r\n  setOptions(options: MapOptions): void;\r\n  panToBounds(latLngBounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\r\n  fitBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding): void;\r\n}\r\n\r\nexport interface LatLng {\r\n  lat(): number;\r\n  lng(): number;\r\n  toJSON(): any;\r\n  toString(): string;\r\n}\r\n\r\nexport interface Marker extends MVCObject {\r\n  setMap(map: GoogleMap): void;\r\n  setPosition(latLng: LatLng | LatLngLiteral): void;\r\n  setTitle(title: string): void;\r\n  setLabel(label: string | MarkerLabel): void;\r\n  setDraggable(draggable: boolean): void;\r\n  setIcon(icon: string | MarkerIcon | GoogleSymbol): void;\r\n  setOpacity(opacity: number): void;\r\n  setVisible(visible: boolean): void;\r\n  setZIndex(zIndex: number): void;\r\n  setAnimation(animation: any): void;\r\n  getLabel(): MarkerLabel;\r\n  setClickable(clickable: boolean): void;\r\n}\r\n\r\nexport interface MarkerOptions {\r\n  position: LatLng | LatLngLiteral;\r\n  title?: string;\r\n  map?: GoogleMap;\r\n  label?: string | MarkerLabel;\r\n  draggable?: boolean;\r\n  icon?: string | MarkerIcon | GoogleSymbol;\r\n  opacity?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n  clickable: boolean;\r\n  animation?: any;\r\n}\r\n\r\nexport interface MarkerLabel {\r\n  color: string;\r\n  fontFamily: string;\r\n  fontSize: string;\r\n  fontWeight: string;\r\n  text: string;\r\n}\r\n\r\nexport interface MarkerIcon {\r\n  anchor?: Point;\r\n  labelOrigin?: Point;\r\n  origin?: Point;\r\n  scaledSize?: Size;\r\n  size?: Size;\r\n  url: string;\r\n}\r\n\r\nexport interface Circle extends MVCObject {\r\n  getBounds(): LatLngBounds;\r\n  getCenter(): LatLng;\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getRadius(): number;\r\n  getVisible(): boolean;\r\n  setCenter(center: LatLng | LatLngLiteral): void;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: CircleOptions): void;\r\n  setRadius(radius: number): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\nexport interface CircleOptions {\r\n  center?: LatLng | LatLngLiteral;\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  map?: GoogleMap;\r\n  radius?: number;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Rectangle extends MVCObject {\r\n  getBounds(): LatLngBounds;\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getVisible(): boolean;\r\n  setBounds(bounds: LatLngBounds | LatLngBoundsLiteral): void;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: RectangleOptions): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\nexport interface RectangleOptions {\r\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  map?: GoogleMap;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokePosition?: 'CENTER' | 'INSIDE' | 'OUTSIDE';\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface LatLngBounds {\r\n  contains(latLng: LatLng): boolean;\r\n  equals(other: LatLngBounds | LatLngBoundsLiteral): boolean;\r\n  extend(point: LatLng | LatLngLiteral): void;\r\n  getCenter(): LatLng;\r\n  getNorthEast(): LatLng;\r\n  getSouthWest(): LatLng;\r\n  intersects(other: LatLngBounds | LatLngBoundsLiteral): boolean;\r\n  isEmpty(): boolean;\r\n  toJSON(): LatLngBoundsLiteral;\r\n  toSpan(): LatLng;\r\n  toString(): string;\r\n  toUrlValue(precision?: number): string;\r\n  union(other: LatLngBounds | LatLngBoundsLiteral): LatLngBounds;\r\n}\r\n\r\nexport interface Padding {\r\n  top: number;\r\n  left: number;\r\n  right: number;\r\n  bottom: number;\r\n}\r\n\r\nexport interface LatLngBoundsLiteral {\r\n  east: number;\r\n  north: number;\r\n  south: number;\r\n  west: number;\r\n}\r\n\r\nexport interface LatLngLiteral {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nexport interface MouseEvent { latLng: LatLng; }\r\n\r\nexport interface MapOptions {\r\n  center?: LatLng | LatLngLiteral;\r\n  zoom?: number;\r\n  minZoom?: number;\r\n  maxZoom?: number;\r\n  controlSize?: number;\r\n  disableDoubleClickZoom?: boolean;\r\n  disableDefaultUI?: boolean;\r\n  scrollwheel?: boolean;\r\n  backgroundColor?: string;\r\n  draggable?: boolean;\r\n  draggableCursor?: string;\r\n  draggingCursor?: string;\r\n  keyboardShortcuts?: boolean;\r\n  styles?: MapTypeStyle[];\r\n  zoomControl?: boolean;\r\n  zoomControlOptions?: ZoomControlOptions;\r\n  streetViewControl?: boolean;\r\n  streetViewControlOptions?: StreetViewControlOptions;\r\n  scaleControl?: boolean;\r\n  scaleControlOptions?: ScaleControlOptions;\r\n  mapTypeControl?: boolean;\r\n  mapTypeControlOptions?: MapTypeControlOptions;\r\n  panControl?: boolean;\r\n  panControlOptions?: PanControlOptions;\r\n  rotateControl?: boolean;\r\n  rotateControlOptions?: RotateControlOptions;\r\n  fullscreenControl?: boolean;\r\n  fullscreenControlOptions?: FullscreenControlOptions;\r\n  mapTypeId?: string | MapTypeId;\r\n  clickableIcons?: boolean;\r\n  gestureHandling?: 'cooperative' | 'greedy' | 'none' | 'auto';\r\n  tilt?: number;\r\n  restriction?: MapRestriction;\r\n}\r\n\r\nexport interface MapTypeStyle {\r\n  elementType?: 'all' | 'geometry' | 'geometry.fill' | 'geometry.stroke' | 'labels' | 'labels.icon' |\r\n  'labels.text' | 'labels.text.fill' | 'labels.text.stroke';\r\n  featureType?: 'administrative' | 'administrative.country' | 'administrative.land_parcel' |\r\n  'administrative.locality' | 'administrative.neighborhood' | 'administrative.province' | 'all' |\r\n  'landscape' | 'landscape.man_made' | 'landscape.natural' | 'landscape.natural.landcover' |\r\n  'landscape.natural.terrain' | 'poi' | 'poi.attraction' | 'poi.business' | 'poi.government' |\r\n  'poi.medical' | 'poi.park' | 'poi.place_of_worship' | 'poi.school' | 'poi.sports_complex' | 'road' |\r\n  'road.arterial' | 'road.highway' | 'road.highway.controlled_access' | 'road.local' | 'transit' |\r\n  'transit.line' | 'transit.station' | 'transit.station.airport' | 'transit.station.bus' |\r\n  'transit.station.rail' | 'water';\r\n  stylers: MapTypeStyler[];\r\n}\r\n\r\n/**\r\n *  If more than one key is specified in a single MapTypeStyler, all but one will be ignored.\r\n */\r\nexport interface MapTypeStyler {\r\n  color?: string;\r\n  gamma?: number;\r\n  hue?: string;\r\n  invert_lightness?: boolean;\r\n  lightness?: number;\r\n  saturation?: number;\r\n  visibility?: string;\r\n  weight?: number;\r\n}\r\n\r\nexport interface InfoWindow extends MVCObject {\r\n  close(): void;\r\n  getContent(): string | Node;\r\n  getPosition(): LatLng;\r\n  getZIndex(): number;\r\n  open(map?: GoogleMap, anchor?: MVCObject): void;\r\n  setContent(content: string | Node): void;\r\n  setOptions(options: InfoWindowOptions): void;\r\n  setPosition(position: LatLng | LatLngLiteral): void;\r\n  setZIndex(zIndex: number): void;\r\n}\r\n\r\nexport interface MapsEventListener { remove(): void; }\r\n\r\nexport interface Size {\r\n  height: number;\r\n  width: number;\r\n  equals(other: Size): boolean;\r\n  toString(): string;\r\n}\r\n\r\nexport interface InfoWindowOptions {\r\n  content?: string | Node;\r\n  disableAutoPan?: boolean;\r\n  maxWidth?: number;\r\n  pixelOffset?: Size;\r\n  position?: LatLng | LatLngLiteral;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n  equals(other: Point): boolean;\r\n  toString(): string;\r\n}\r\n\r\nexport interface GoogleSymbol {\r\n  anchor?: Point;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  labelOrigin?: Point;\r\n  path?: string | SymbolPath;\r\n  rotation?: number;\r\n  scale?: number;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokeWeight?: number;\r\n}\r\n\r\nexport interface IconSequence {\r\n  fixedRotation?: boolean;\r\n  icon?: GoogleSymbol;\r\n  offset?: string;\r\n  repeat?: string;\r\n}\r\n\r\nexport enum SymbolPath {\r\n  BACKWARD_CLOSED_ARROW = 3,\r\n  BACKWARD_OPEN_ARROW = 4,\r\n  CIRCLE = 0,\r\n  FORWARD_CLOSED_ARROW = 1,\r\n  FORWARD_OPEN_ARROW = 2,\r\n}\r\n\r\nexport interface PolylineOptions {\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  geodesic?: boolean;\r\n  icons?: Array<IconSequence>;\r\n  map?: GoogleMap;\r\n  path?: Array<LatLng> | Array<LatLng | LatLngLiteral>;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Polyline extends MVCObject {\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getPath(): MVCArray<LatLng>;\r\n  getVisible(): boolean;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: PolylineOptions): void;\r\n  setPath(path: Array<LatLng | LatLngLiteral>): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\n/**\r\n * PolyMouseEvent gets emitted when the user triggers mouse events on a polyline.\r\n */\r\nexport interface PolyMouseEvent extends MouseEvent {\r\n  edge: number;\r\n  path: number;\r\n  vertex: number;\r\n}\r\n\r\nexport interface PolygonOptions {\r\n  clickable?: boolean;\r\n  draggable?: boolean;\r\n  editable?: boolean;\r\n  fillColor?: string;\r\n  fillOpacity?: number;\r\n  geodesic?: boolean;\r\n  icon?: Array<IconSequence>;\r\n  map?: GoogleMap;\r\n  paths?: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>>;\r\n  strokeColor?: string;\r\n  strokeOpacity?: number;\r\n  strokeWeight?: number;\r\n  visible?: boolean;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface Polygon extends MVCObject {\r\n  getDraggable(): boolean;\r\n  getEditable(): boolean;\r\n  getMap(): GoogleMap;\r\n  getPath(): MVCArray<LatLng>;\r\n  getPaths(): MVCArray<MVCArray<LatLng>>;\r\n  getVisible(): boolean;\r\n  setDraggable(draggable: boolean): void;\r\n  setEditable(editable: boolean): void;\r\n  setMap(map: GoogleMap): void;\r\n  setPath(path: Array<LatLng> | Array<LatLng | LatLngLiteral>): void;\r\n  setOptions(options: PolygonOptions): void;\r\n  setPaths(paths: Array<Array<LatLng | LatLngLiteral>> | Array<LatLng | LatLngLiteral>): void;\r\n  setVisible(visible: boolean): void;\r\n}\r\n\r\nexport interface KmlLayer extends MVCObject {\r\n  getDefaultViewport(): LatLngBounds;\r\n  getMap(): GoogleMap;\r\n  getMetadata(): KmlLayerMetadata;\r\n  getStatus(): KmlLayerStatus;\r\n  getUrl(): string;\r\n  getZIndex(): number;\r\n  setMap(map: GoogleMap): void;\r\n  setOptions(options: KmlLayerOptions): void;\r\n  setUrl(url: string): void;\r\n  setZIndex(zIndex: number): void;\r\n}\r\n\r\n/**\r\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerStatus\r\n */\r\nexport type KmlLayerStatus = 'DOCUMENT_NOT_FOUND' |\r\n  'DOCUMENT_TOO_LARGE' | 'FETCH_ERROR' | 'INVALID_DOCUMENT' | 'INVALID_REQUEST' |\r\n  'LIMITS_EXCEEDED' | 'OK' | 'TIMED_OUT' | 'UNKNOWN';\r\n\r\n/**\r\n * See: https://developers.google.com/maps/documentation/javascript/reference?hl=de#KmlLayerMetadata\r\n */\r\nexport interface KmlLayerMetadata {\r\n  author: KmlAuthor;\r\n  description: string;\r\n  hasScreenOverlays: boolean;\r\n  name: string;\r\n  snippet: string;\r\n}\r\n\r\nexport interface KmlAuthor {\r\n  email: string;\r\n  name: string;\r\n  uri: string;\r\n}\r\n\r\nexport interface KmlLayerOptions {\r\n  clickable?: boolean;\r\n  map?: GoogleMap;\r\n  preserveViewport?: boolean;\r\n  screenOverlays?: boolean;\r\n  suppressInfoWindows?: boolean;\r\n  url?: string;\r\n  zIndex?: number;\r\n}\r\n\r\nexport interface KmlFeatureData {\r\n  author: KmlAuthor;\r\n  description: string;\r\n  id: string;\r\n  infoWindowHtml: string;\r\n  name: string;\r\n  snippet: string;\r\n}\r\n\r\nexport interface KmlMouseEvent extends MouseEvent {\r\n  featureData: KmlFeatureData;\r\n  pixelOffset: Size;\r\n}\r\n\r\nexport interface TransitLayer extends MVCObject {\r\n  getMap(): GoogleMap;\r\n  setMap(map: GoogleMap): void;\r\n}\r\n\r\nexport interface TransitLayerOptions {\r\n  visible: boolean;\r\n}\r\n\r\nexport interface BicyclingLayer extends MVCObject {\r\n  getMap(): GoogleMap;\r\n  setMap(map: GoogleMap): void;\r\n}\r\n\r\nexport interface BicyclingLayerOptions {\r\n  visible: boolean;\r\n}\r\n\r\nexport interface Data extends MVCObject {\r\n  features: Feature[];\r\n  addGeoJson(geoJson: Object, options?: GeoJsonOptions): Feature[];\r\n  remove(feature: Feature): void;\r\n  setControlPosition(controlPosition: ControlPosition): void;\r\n  setControls(controls: string[]): void;\r\n  setDrawingMode(drawingMode: string): void;\r\n  setMap(map: GoogleMap): void;\r\n  /* tslint:disable */\r\n  /*\r\n  * Tslint configuration check-parameters will prompt errors for these lines of code.\r\n  * https://palantir.github.io/tslint/rules/no-unused-variable/\r\n  */\r\n  setStyle(style: () => void): void;\r\n  forEach(callback: (feature: Feature) => void): void;\r\n  loadGeoJson(url: string, options?: GeoJsonOptions, callback?: (feats: Feature[]) => void): void;\r\n  /* tslint:enable */\r\n}\r\n\r\nexport interface Feature extends MVCObject {\r\n  id?: number | string | undefined;\r\n  geometry: Geometry;\r\n  properties: any;\r\n}\r\n\r\nexport interface DataOptions {\r\n  controlPosition?: ControlPosition;\r\n  controls?: string[];\r\n  drawingMode?: string;\r\n  featureFactory?: (geometry: Geometry) => Feature;\r\n  map?: GoogleMap;\r\n  style?: () => void;\r\n}\r\n\r\nexport interface DataMouseEvent extends MouseEvent {\r\n  feature: Feature;\r\n}\r\n\r\nexport interface GeoJsonOptions {\r\n  idPropertyName: string;\r\n}\r\n\r\nexport interface Geometry {\r\n  type: string;\r\n}\r\n\r\n/**\r\n * Identifiers used to specify the placement of controls on the map. Controls are\r\n * positioned relative to other controls in the same layout position. Controls that\r\n * are added first are positioned closer to the edge of the map.\r\n */\r\nexport enum ControlPosition {\r\n  RIGHT_BOTTOM,\r\n  TOP_LEFT,\r\n  TOP_CENTER,\r\n  TOP_RIGHT,\r\n  LEFT_CENTER,\r\n  LEFT_TOP,\r\n  LEFT_BOTTOM,\r\n  RIGHT_TOP,\r\n  RIGHT_CENTER,\r\n  BOTTOM_RIGHT,\r\n  BOTTOM_LEFT,\r\n  BOTTOM_CENTER,\r\n}\r\n\r\nexport enum MapTypeId {\r\n  /** This map type displays a transparent layer of major streets on satellite images. */\r\n  HYBRID,\r\n  /** This map type displays a normal street map. */\r\n  ROADMAP,\r\n  /** This map type displays satellite images. */\r\n  SATELLITE,\r\n  /** This map type displays maps with physical features such as terrain and vegetation. */\r\n  TERRAIN,\r\n}\r\n\r\n/***** Controls *****/\r\n/** Options for the rendering of the map type control. */\r\nexport interface MapTypeControlOptions {\r\n  /** IDs of map types to show in the control. */\r\n  mapTypeIds?: (MapTypeId | string)[];\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_RIGHT.\r\n   */\r\n  position?: ControlPosition;\r\n  /** Style id. Used to select what style of map type control to display. */\r\n  style?: MapTypeControlStyle;\r\n}\r\n\r\nexport enum MapTypeControlStyle {\r\n  DEFAULT = 0,\r\n  DROPDOWN_MENU = 2,\r\n  HORIZONTAL_BAR = 1,\r\n}\r\n\r\nexport interface OverviewMapControlOptions {\r\n  opened?: boolean;\r\n}\r\n\r\n/** Options for the rendering of the pan control. */\r\nexport interface PanControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_LEFT.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the rendering of the rotate control. */\r\nexport interface RotateControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_LEFT.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the rendering of the scale control. */\r\nexport interface ScaleControlOptions {\r\n  /** Style id. Used to select what style of scale control to display. */\r\n  style?: ScaleControlStyle;\r\n}\r\n\r\nexport enum ScaleControlStyle {\r\n  DEFAULT,\r\n}\r\n\r\n/** Options for the rendering of the Street View pegman control on the map. */\r\nexport interface StreetViewControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map. The\r\n   * default position is embedded within the navigation (zoom and pan) controls.\r\n   * If this position is empty or the same as that specified in the\r\n   * zoomControlOptions or panControlOptions, the Street View control will be\r\n   * displayed as part of the navigation controls. Otherwise, it will be displayed\r\n   * separately.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the rendering of the zoom control. */\r\nexport interface ZoomControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is TOP_LEFT.\r\n   */\r\n  position?: ControlPosition;\r\n  style?: ZoomControlStyle;\r\n}\r\n\r\nexport enum ZoomControlStyle {\r\n  DEFAULT,\r\n  LARGE,\r\n  SMALL,\r\n}\r\n\r\n/** Options for the rendering of the fullscreen control. */\r\nexport interface FullscreenControlOptions {\r\n  /**\r\n   * Position id. Used to specify the position of the control on the map.\r\n   * The default position is RIGHT_TOP.\r\n   */\r\n  position?: ControlPosition;\r\n}\r\n\r\n/** Options for the restricting the bounds of the map. */\r\nexport interface MapRestriction {\r\n  latLngBounds: LatLngBounds | LatLngBoundsLiteral;\r\n  strictBounds?: boolean;\r\n}\r\n\r\nexport interface Geocoder {\r\n  geocode: (request: GeocoderRequest, googleCallback: (results: GeocoderResult[], status: GeocoderStatus) => void) => void;\r\n}\r\n\r\nexport interface GeocoderAddressComponent {\r\n  long_name: string;\r\n  short_name: string;\r\n  types: string[];\r\n}\r\n\r\n/** Options for restricting the geocoder results */\r\nexport interface GeocoderComponentRestrictions {\r\n  administrativeArea?: string;\r\n  country?: string;\r\n  locality?: string;\r\n  postalCode?: string;\r\n  route?: string;\r\n}\r\n\r\nexport interface GeocoderGeometry {\r\n  bounds: LatLngBounds;\r\n  location: LatLng;\r\n  location_type: GeocoderLocationType;\r\n  viewport: LatLngBounds;\r\n}\r\n\r\nexport enum GeocoderLocationType {\r\n  APPROXIMATE = 'APPROXIMATE',\r\n  GEOMETRIC_CENTER = 'GEOMETRIC_CENTER',\r\n  RANGE_INTERPOLATED = 'RANGE_INTERPOLATED',\r\n  ROOFTOP = 'ROOFTOP',\r\n}\r\n\r\nexport interface GeocoderRequest {\r\n  address?: string;\r\n  bounds?: LatLngBounds | LatLngBoundsLiteral;\r\n  componentRestrictions?: GeocoderComponentRestrictions;\r\n  location?: LatLng | LatLngLiteral;\r\n  placeId?: string;\r\n  region?: string;\r\n}\r\n\r\nexport interface GeocoderResult {\r\n  address_components: GeocoderAddressComponent[];\r\n  formatted_address: string;\r\n  geometry: GeocoderGeometry;\r\n  partial_match: boolean;\r\n  place_id: string;\r\n  postcode_localities: string[];\r\n  types: string[];\r\n}\r\n\r\nexport enum GeocoderStatus {\r\n  ERROR = 'ERROR',\r\n  INVALID_REQUEST = 'INVALID_REQUEST',\r\n  OK = 'OK',\r\n  OVER_QUERY_LIMIT = 'OVER_QUERY_LIMIT',\r\n  REQUEST_DENIED = 'REQUEST_DENIED',\r\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\r\n  ZERO_RESULTS = 'ZERO_RESULTS',\r\n}\r\n","import { LatLngLiteral } from './services/google-maps-types';\r\n\r\n// exported map types\r\nexport {\r\n  KmlMouseEvent,\r\n  DataMouseEvent,\r\n  LatLngBounds,\r\n  LatLngBoundsLiteral,\r\n  LatLng,\r\n  LatLngLiteral,\r\n  PolyMouseEvent,\r\n  MarkerLabel,\r\n  MarkerIcon,\r\n  Geocoder,\r\n  GeocoderAddressComponent,\r\n  GeocoderComponentRestrictions,\r\n  GeocoderGeometry,\r\n  GeocoderLocationType,\r\n  GeocoderRequest,\r\n  GeocoderResult,\r\n  GeocoderStatus,\r\n  MapTypeStyle,\r\n  Padding,\r\n  ControlPosition,\r\n  OverviewMapControlOptions,\r\n  PanControlOptions,\r\n  RotateControlOptions,\r\n  MapTypeControlOptions,\r\n  MapTypeId,\r\n  ScaleControlOptions,\r\n  ScaleControlStyle,\r\n  StreetViewControlOptions,\r\n  ZoomControlOptions,\r\n  ZoomControlStyle,\r\n  FullscreenControlOptions,\r\n  CircleOptions,\r\n  Circle,\r\n  Polyline,\r\n  PolylineOptions,\r\n  Polygon,\r\n  PolygonOptions,\r\n  Rectangle,\r\n  RectangleOptions,\r\n  Marker,\r\n  MarkerOptions,\r\n  GoogleSymbol,\r\n} from './services/google-maps-types';\r\n\r\n/**\r\n * MouseEvent gets emitted when the user triggers mouse events on the map.\r\n */\r\nexport interface MouseEvent {\r\n  coords: LatLngLiteral;\r\n  placeId?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport abstract class MapsAPILoader {\r\n  abstract load(): Promise<void>;\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport * as mapTypes from './google-maps-types';\r\nimport { Polyline, PolylineOptions } from './google-maps-types';\r\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\r\n\r\n// todo: add types for this\r\ndeclare var google: any;\r\n\r\n/**\r\n * Wrapper class that handles the communication with the Google Maps Javascript\r\n * API v3\r\n */\r\n@Injectable()\r\nexport class GoogleMapsAPIWrapper {\r\n  private _map: Promise<mapTypes.GoogleMap>;\r\n  private _mapResolver: (value?: mapTypes.GoogleMap) => void;\r\n\r\n  constructor(private _loader: MapsAPILoader, private _zone: NgZone) {\r\n    this._map =\r\n        new Promise<mapTypes.GoogleMap>((resolve: (value?: mapTypes.GoogleMap) => void) => { this._mapResolver = resolve; });\r\n  }\r\n\r\n  createMap(el: HTMLElement, mapOptions: mapTypes.MapOptions): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._loader.load().then(() => {\r\n        const map = new google.maps.Map(el, mapOptions);\r\n        this._mapResolver(map as mapTypes.GoogleMap);\r\n        return;\r\n      });\r\n    });\r\n  }\r\n\r\n  setMapOptions(options: mapTypes.MapOptions) {\r\n    return this._zone.runOutsideAngular(() => {\r\n      this._map.then((m: mapTypes.GoogleMap) => { m.setOptions(options); });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a google map marker with the map context\r\n   */\r\n  createMarker(options: mapTypes.MarkerOptions = {} as mapTypes.MarkerOptions, addToMap: boolean = true):\r\n      Promise<mapTypes.Marker> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        if (addToMap) {\r\n          options.map = map;\r\n        }\r\n        return new google.maps.Marker(options);\r\n      });\r\n    });\r\n  }\r\n\r\n  createInfoWindow(options?: mapTypes.InfoWindowOptions): Promise<mapTypes.InfoWindow> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then(() => { return new google.maps.InfoWindow(options); });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a google.map.Circle for the current map.\r\n   */\r\n  createCircle(options: mapTypes.CircleOptions): Promise<mapTypes.Circle> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        if (typeof options.strokePosition === 'string') {\r\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\r\n        }\r\n        options.map = map;\r\n        return new google.maps.Circle(options);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a google.map.Rectangle for the current map.\r\n   */\r\n  createRectangle(options: mapTypes.RectangleOptions): Promise<mapTypes.Rectangle> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        options.map = map;\r\n        return new google.maps.Rectangle(options);\r\n      });\r\n    });\r\n  }\r\n\r\n  createPolyline(options: PolylineOptions): Promise<Polyline> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\r\n        let line = new google.maps.Polyline(options);\r\n        line.setMap(map);\r\n        return line;\r\n      });\r\n    });\r\n  }\r\n\r\n  createPolygon(options: mapTypes.PolygonOptions): Promise<mapTypes.Polygon> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this.getNativeMap().then((map: mapTypes.GoogleMap) => {\r\n        let polygon = new google.maps.Polygon(options);\r\n        polygon.setMap(map);\r\n        return polygon;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a new google.map.Data layer for the current map\r\n   */\r\n  createDataLayer(options?: mapTypes.DataOptions): Promise<mapTypes.Data> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then(m => {\r\n        let data = new google.maps.Data(options);\r\n        data.setMap(m);\r\n        return data;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a TransitLayer instance for a map\r\n   * @param {TransitLayerOptions} options - used for setting layer options\r\n   * @returns {Promise<TransitLayer>} a new transit layer object\r\n   */\r\n  createTransitLayer(options: mapTypes.TransitLayerOptions): Promise<mapTypes.TransitLayer>{\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        let newLayer: mapTypes.TransitLayer = new google.maps.TransitLayer();\r\n        newLayer.setMap(options.visible ? map : null);\r\n        return newLayer;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a BicyclingLayer instance for a map\r\n   * @param {BicyclingLayerOptions} options - used for setting layer options\r\n   * @returns {Promise<BicyclingLayer>} a new bicycling layer object\r\n   */\r\n  createBicyclingLayer(options: mapTypes.BicyclingLayerOptions): Promise<mapTypes.BicyclingLayer>{\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => {\r\n        let newLayer: mapTypes.BicyclingLayer = new google.maps.BicyclingLayer();\r\n        newLayer.setMap(options.visible ? map : null);\r\n        return newLayer;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Determines if given coordinates are insite a Polygon path.\r\n   */\r\n  containsLocation(latLng: mapTypes.LatLngLiteral, polygon: mapTypes.Polygon): Promise<boolean> {\r\n    return google.maps.geometry.poly.containsLocation(latLng, polygon);\r\n  }\r\n\r\n  subscribeToMapEvent<E>(eventName: string): Observable<E> {\r\n    return new Observable((observer: Observer<E>) => {\r\n      this._map.then((m: mapTypes.GoogleMap) => {\r\n        m.addListener(eventName, (arg: E) => { this._zone.run(() => observer.next(arg)); });\r\n      });\r\n    });\r\n  }\r\n\r\n  clearInstanceListeners() {\r\n    return this._zone.runOutsideAngular(() => {\r\n      this._map.then((map: mapTypes.GoogleMap) => {\r\n        google.maps.event.clearInstanceListeners(map);\r\n      });\r\n    });\r\n  }\r\n\r\n  setCenter(latLng: mapTypes.LatLngLiteral): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.setCenter(latLng));\r\n    });\r\n  }\r\n\r\n  getZoom(): Promise<number> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getZoom());\r\n    });\r\n  }\r\n\r\n  getBounds(): Promise<mapTypes.LatLngBounds> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getBounds());\r\n    });\r\n  }\r\n\r\n  getMapTypeId(): Promise<mapTypes.MapTypeId> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getMapTypeId());\r\n    });\r\n  }\r\n\r\n  setZoom(zoom: number): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.setZoom(zoom));\r\n    });\r\n  }\r\n\r\n  getCenter(): Promise<mapTypes.LatLng> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map: mapTypes.GoogleMap) => map.getCenter());\r\n    });\r\n  }\r\n\r\n  panTo(latLng: mapTypes.LatLng | mapTypes.LatLngLiteral): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.panTo(latLng));\r\n    });\r\n  }\r\n\r\n  panBy(x: number, y: number): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.panBy(x, y));\r\n    });\r\n  }\r\n\r\n  fitBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.fitBounds(latLng, padding));\r\n    });\r\n  }\r\n\r\n  panToBounds(latLng: mapTypes.LatLngBounds | mapTypes.LatLngBoundsLiteral, padding?: number | mapTypes.Padding): Promise<void> {\r\n    return this._zone.runOutsideAngular(() => {\r\n      return this._map.then((map) => map.panToBounds(latLng, padding));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the native Google Maps Map instance. Be careful when using this instance directly.\r\n   */\r\n  getNativeMap(): Promise<mapTypes.GoogleMap> { return this._map; }\r\n\r\n  /**\r\n   * Triggers the given event name on the map instance.\r\n   */\r\n  triggerMapEvent(eventName: string): Promise<void> {\r\n    return this._map.then((m) => google.maps.event.trigger(m, eventName));\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmCircle } from '../../directives/circle';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport * as mapTypes from '../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable()\r\nexport class CircleManager {\r\n  private _circles: Map<AgmCircle, Promise<mapTypes.Circle>> =\r\n      new Map<AgmCircle, Promise<mapTypes.Circle>>();\r\n\r\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  addCircle(circle: AgmCircle) {\r\n    this._circles.set(circle, this._apiWrapper.createCircle({\r\n      center: {lat: circle.latitude, lng: circle.longitude},\r\n      clickable: circle.clickable,\r\n      draggable: circle.draggable,\r\n      editable: circle.editable,\r\n      fillColor: circle.fillColor,\r\n      fillOpacity: circle.fillOpacity,\r\n      radius: circle.radius,\r\n      strokeColor: circle.strokeColor,\r\n      strokeOpacity: circle.strokeOpacity,\r\n      strokePosition: circle.strokePosition,\r\n      strokeWeight: circle.strokeWeight,\r\n      visible: circle.visible,\r\n      zIndex: circle.zIndex,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Removes the given circle from the map.\r\n   */\r\n  removeCircle(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => {\r\n      c.setMap(null);\r\n      this._circles.delete(circle);\r\n    });\r\n  }\r\n\r\n  setOptions(circle: AgmCircle, options: mapTypes.CircleOptions): Promise<void> {\r\n    return this._circles.get(circle).then((c) => {\r\n      if (typeof options.strokePosition === 'string') {\r\n        options.strokePosition = google.maps.StrokePosition[options.strokePosition];\r\n      }\r\n      c.setOptions(options);\r\n    });\r\n  }\r\n\r\n  getBounds(circle: AgmCircle): Promise<mapTypes.LatLngBounds> {\r\n    return this._circles.get(circle).then((c) => c.getBounds());\r\n  }\r\n\r\n  getCenter(circle: AgmCircle): Promise<mapTypes.LatLng> {\r\n    return this._circles.get(circle).then((c) => c.getCenter());\r\n  }\r\n\r\n  getRadius(circle: AgmCircle): Promise<number> {\r\n    return this._circles.get(circle).then((c) => c.getRadius());\r\n  }\r\n\r\n  setCenter(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then(\r\n        (c) => { return c.setCenter({lat: circle.latitude, lng: circle.longitude}); });\r\n  }\r\n\r\n  setEditable(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\r\n  }\r\n\r\n  setDraggable(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\r\n  }\r\n\r\n  setVisible(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\r\n  }\r\n\r\n  setRadius(circle: AgmCircle): Promise<void> {\r\n    return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\r\n  }\r\n\r\n  getNativeCircle(circle: AgmCircle): Promise<mapTypes.Circle> {\r\n    return this._circles.get(circle);\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, circle: AgmCircle): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      let listener: mapTypes.MapsEventListener = null;\r\n      this._circles.get(circle).then((c) => {\r\n        listener = c.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n\r\n      return () => {\r\n        if (listener !== null) {\r\n          listener.remove();\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmDataLayer } from './../../directives/data-layer';\r\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\r\nimport { Data, DataOptions, Feature } from './../google-maps-types';\r\n\r\n/**\r\n * Manages all Data Layers for a Google Map instance.\r\n */\r\n@Injectable()\r\nexport class DataLayerManager {\r\n  private _layers: Map<AgmDataLayer, Promise<Data>> =\r\n  new Map<AgmDataLayer, Promise<Data>>();\r\n\r\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\r\n\r\n  /**\r\n   * Adds a new Data Layer to the map.\r\n   */\r\n  addDataLayer(layer: AgmDataLayer) {\r\n    const newLayer = this._wrapper.createDataLayer({\r\n      style: layer.style,\r\n    } as DataOptions)\r\n    .then(d => {\r\n      if (layer.geoJson) {\r\n        this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\r\n      }\r\n      return d;\r\n    });\r\n    this._layers.set(layer, newLayer);\r\n  }\r\n\r\n  deleteDataLayer(layer: AgmDataLayer) {\r\n    this._layers.get(layer).then(l => {\r\n      l.setMap(null);\r\n      this._layers.delete(layer);\r\n    });\r\n  }\r\n\r\n  updateGeoJson(layer: AgmDataLayer, geoJson: Object | string) {\r\n    this._layers.get(layer).then(l => {\r\n      l.forEach(function (feature: Feature) {\r\n        l.remove(feature);\r\n\r\n        var index = l.features.indexOf(feature, 0);\r\n        if (index > -1) {\r\n          l.features.splice(index, 1);\r\n        }\r\n      });\r\n      this.getDataFeatures(l, geoJson).then(features => l.features = features);\r\n    });\r\n  }\r\n\r\n  setDataOptions(layer: AgmDataLayer, options: DataOptions)\r\n  {\r\n    this._layers.get(layer).then(l => {\r\n      l.setControlPosition(options.controlPosition);\r\n      l.setControls(options.controls);\r\n      l.setDrawingMode(options.drawingMode);\r\n      l.setStyle(options.style);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a Google Maps event listener for the given DataLayer as an Observable\r\n   */\r\n  createEventObservable<T>(eventName: string, layer: AgmDataLayer): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._layers.get(layer).then((d: Data) => {\r\n        d.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Extract features from a geoJson using google.maps Data Class\r\n   * @param d : google.maps.Data class instance\r\n   * @param geoJson : url or geojson object\r\n   */\r\n  getDataFeatures(d: Data, geoJson: Object | string): Promise<Feature[]> {\r\n    return new Promise<Feature[]>((resolve, reject) => {\r\n        if (typeof geoJson === 'object') {\r\n          try {\r\n            const features = d.addGeoJson(geoJson);\r\n            resolve(features);\r\n          } catch (e) {\r\n            reject(e);\r\n          }\r\n        } else if (typeof geoJson === 'string') {\r\n          d.loadGeoJson(geoJson, null, resolve);\r\n        } else {\r\n          reject(`Impossible to extract features from geoJson: wrong argument type`);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, from, Observable, timer } from 'rxjs';\r\nimport {\r\n  flatMap,\r\n  map,\r\n  sample,\r\n  shareReplay,\r\n  switchMap,\r\n} from 'rxjs/operators';\r\nimport { LatLng, LatLngBounds, LatLngLiteral } from './google-maps-types';\r\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\r\n\r\ndeclare var google: any;\r\n\r\nexport interface FitBoundsDetails {\r\n  latLng: LatLng | LatLngLiteral;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type BoundsMap = Map<string, LatLng | LatLngLiteral>;\r\n\r\n/**\r\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\r\n * of AGM.\r\n */\r\nexport abstract class FitBoundsAccessor {\r\n  abstract getFitBoundsDetails$(): Observable<FitBoundsDetails>;\r\n}\r\n\r\n/**\r\n * The FitBoundsService is responsible for computing the bounds of the a single map.\r\n */\r\n@Injectable()\r\nexport class FitBoundsService {\r\n  protected readonly bounds$: Observable<LatLngBounds>;\r\n  protected readonly _boundsChangeSampleTime$ = new BehaviorSubject<number>(200);\r\n  protected readonly _includeInBounds$ = new BehaviorSubject<BoundsMap>(new Map<string, LatLng | LatLngLiteral>());\r\n\r\n  constructor(loader: MapsAPILoader) {\r\n    this.bounds$ = from(loader.load()).pipe(\r\n      flatMap(() => this._includeInBounds$),\r\n      sample(\r\n        this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time))),\r\n      ),\r\n      map(includeInBounds => this._generateBounds(includeInBounds)),\r\n      shareReplay(1),\r\n    );\r\n  }\r\n\r\n  private _generateBounds(\r\n    includeInBounds: Map<string, LatLng | LatLngLiteral>,\r\n  ) {\r\n    const bounds = new google.maps.LatLngBounds() as LatLngBounds;\r\n    includeInBounds.forEach(b => bounds.extend(b));\r\n    return bounds;\r\n  }\r\n\r\n  addToBounds(latLng: LatLng | LatLngLiteral) {\r\n    const id = this._createIdentifier(latLng);\r\n    if (this._includeInBounds$.value.has(id)) {\r\n      return;\r\n    }\r\n    const map = this._includeInBounds$.value;\r\n    map.set(id, latLng);\r\n    this._includeInBounds$.next(map);\r\n  }\r\n\r\n  removeFromBounds(latLng: LatLng | LatLngLiteral) {\r\n    const map = this._includeInBounds$.value;\r\n    map.delete(this._createIdentifier(latLng));\r\n    this._includeInBounds$.next(map);\r\n  }\r\n\r\n  changeFitBoundsChangeSampleTime(timeMs: number) {\r\n    this._boundsChangeSampleTime$.next(timeMs);\r\n  }\r\n\r\n  getBounds$(): Observable<LatLngBounds> {\r\n    return this.bounds$;\r\n  }\r\n\r\n  protected _createIdentifier(latLng: LatLng | LatLngLiteral): string {\r\n    return `${latLng.lat}+${latLng.lng}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { bindCallback, ConnectableObservable, Observable, of, ReplaySubject, throwError } from 'rxjs';\r\nimport { map, multicast, switchMap } from 'rxjs/operators';\r\nimport { Geocoder, GeocoderRequest, GeocoderResult, GeocoderStatus } from './google-maps-types';\r\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AgmGeocoder {\r\n  protected readonly geocoder$: Observable<Geocoder>;\r\n\r\n  constructor(loader: MapsAPILoader) {\r\n    const connectableGeocoder$ = new Observable(subscriber => {\r\n      loader.load().then(() => subscriber.next());\r\n    })\r\n      .pipe(\r\n        map(() => this._createGeocoder()),\r\n        multicast(new ReplaySubject(1)),\r\n      ) as ConnectableObservable<Geocoder>;\r\n\r\n    connectableGeocoder$.connect(); // ignore the subscription\r\n    // since we will remain subscribed till application exits\r\n\r\n    this.geocoder$ = connectableGeocoder$;\r\n  }\r\n\r\n  geocode(request: GeocoderRequest): Observable<GeocoderResult[]> {\r\n    return this.geocoder$.pipe(\r\n      switchMap((geocoder) => this._getGoogleResults(geocoder, request))\r\n    );\r\n  }\r\n\r\n  private _getGoogleResults(geocoder: Geocoder, request: GeocoderRequest): Observable<GeocoderResult[]> {\r\n    const geocodeObservable = bindCallback(geocoder.geocode);\r\n    return geocodeObservable(request).pipe(\r\n      switchMap(([results, status]) => {\r\n        if (status === GeocoderStatus.OK) {\r\n          return of(results);\r\n        }\r\n\r\n        return throwError(status);\r\n      })\r\n    );\r\n  }\r\n\r\n  private _createGeocoder(): Geocoder {\r\n    return new google.maps.Geocoder() as Geocoder;\r\n  }\r\n}\r\n","import { Provider } from '@angular/core';\r\n\r\nexport class WindowRef {\r\n  getNativeWindow(): any { return window; }\r\n}\r\n\r\nexport class DocumentRef {\r\n  getNativeDocument(): any { return document; }\r\n}\r\n\r\nexport const BROWSER_GLOBALS_PROVIDERS: Provider[] = [WindowRef, DocumentRef];\r\n","import { Inject, Injectable, InjectionToken, LOCALE_ID, Optional } from '@angular/core';\r\n\r\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\r\n\r\nimport { MapsAPILoader } from './maps-api-loader';\r\n\r\nexport enum GoogleMapsScriptProtocol {\r\n  HTTP = 1,\r\n  HTTPS = 2,\r\n  AUTO = 3,\r\n}\r\n\r\n/**\r\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\r\n * LazyMapsAPILoaderConfig}.\r\n */\r\nexport const LAZY_MAPS_API_CONFIG = new InjectionToken<LazyMapsAPILoaderConfigLiteral>('angular-google-maps LAZY_MAPS_API_CONFIG');\r\n\r\n/**\r\n * Configuration for the {@link LazyMapsAPILoader}.\r\n */\r\nexport interface LazyMapsAPILoaderConfigLiteral {\r\n  /**\r\n   * The Google Maps API Key (see:\r\n   * https://developers.google.com/maps/documentation/javascript/get-api-key)\r\n   */\r\n  apiKey?: string;\r\n\r\n  /**\r\n   * The Google Maps client ID (for premium plans).\r\n   * When you have a Google Maps APIs Premium Plan license, you must authenticate\r\n   * your application with either an API key or a client ID.\r\n   * The Google Maps API will fail to load if both a client ID and an API key are included.\r\n   */\r\n  clientId?: string;\r\n\r\n  /**\r\n   * The Google Maps channel name (for premium plans).\r\n   * A channel parameter is an optional parameter that allows you to track usage under your client\r\n   * ID by assigning a distinct channel to each of your applications.\r\n   */\r\n  channel?: string;\r\n\r\n  /**\r\n   * Google Maps API version.\r\n   */\r\n  apiVersion?: string;\r\n\r\n  /**\r\n   * Host and Path used for the `<script>` tag.\r\n   */\r\n  hostAndPath?: string;\r\n\r\n  /**\r\n   * Protocol used for the `<script>` tag.\r\n   */\r\n  protocol?: GoogleMapsScriptProtocol;\r\n\r\n  /**\r\n   * Defines which Google Maps libraries should get loaded.\r\n   */\r\n  libraries?: string[];\r\n\r\n  /**\r\n   * The default bias for the map behavior is US.\r\n   * If you wish to alter your application to serve different map tiles or bias the\r\n   * application, you can overwrite the default behavior (US) by defining a `region`.\r\n   * See https://developers.google.com/maps/documentation/javascript/basics#Region\r\n   */\r\n  region?: string;\r\n\r\n  /**\r\n   * The Google Maps API uses the browser's preferred language when displaying\r\n   * textual information. If you wish to overwrite this behavior and force the API\r\n   * to use a given language, you can use this setting.\r\n   * See https://developers.google.com/maps/documentation/javascript/basics#Language\r\n   */\r\n  language?: string;\r\n}\r\n\r\n@Injectable()\r\nexport class LazyMapsAPILoader extends MapsAPILoader {\r\n  protected _scriptLoadingPromise: Promise<void>;\r\n  protected _config: LazyMapsAPILoaderConfigLiteral;\r\n  protected _windowRef: WindowRef;\r\n  protected _documentRef: DocumentRef;\r\n  protected readonly _SCRIPT_ID: string = 'agmGoogleMapsApiScript';\r\n  protected readonly callbackName: string = `agmLazyMapsAPILoader`;\r\n\r\n  constructor(@Optional() @Inject(LAZY_MAPS_API_CONFIG) config: any = null, w: WindowRef, d: DocumentRef,\r\n   @Inject(LOCALE_ID) private localeId: string) {\r\n    super();\r\n    this._config = config || {};\r\n    this._windowRef = w;\r\n    this._documentRef = d;\r\n  }\r\n\r\n  load(): Promise<void> {\r\n    const window = this._windowRef.getNativeWindow() as any;\r\n    if (window.google && window.google.maps) {\r\n      // Google maps already loaded on the page.\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (this._scriptLoadingPromise) {\r\n      return this._scriptLoadingPromise;\r\n    }\r\n\r\n    // this can happen in HMR situations or Stackblitz.io editors.\r\n    const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\r\n    if (scriptOnPage) {\r\n      this._assignScriptLoadingPromise(scriptOnPage);\r\n      return this._scriptLoadingPromise;\r\n    }\r\n\r\n    const script = this._documentRef.getNativeDocument().createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.id = this._SCRIPT_ID;\r\n    script.src = this._getScriptSrc(this.callbackName);\r\n    this._assignScriptLoadingPromise(script);\r\n    this._documentRef.getNativeDocument().body.appendChild(script);\r\n    return this._scriptLoadingPromise;\r\n  }\r\n\r\n  private _assignScriptLoadingPromise(scriptElem: HTMLElement) {\r\n    this._scriptLoadingPromise = new Promise<void>((resolve: Function, reject: Function) => {\r\n      (this._windowRef.getNativeWindow() as any)[this.callbackName] = () => {\r\n        resolve();\r\n      };\r\n\r\n      scriptElem.onerror = (error: Event) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  }\r\n\r\n  protected _getScriptSrc(callbackName: string): string {\r\n    let protocolType: GoogleMapsScriptProtocol =\r\n        (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\r\n    let protocol: string;\r\n\r\n    switch (protocolType) {\r\n      case GoogleMapsScriptProtocol.AUTO:\r\n        protocol = '';\r\n        break;\r\n      case GoogleMapsScriptProtocol.HTTP:\r\n        protocol = 'http:';\r\n        break;\r\n      case GoogleMapsScriptProtocol.HTTPS:\r\n        protocol = 'https:';\r\n        break;\r\n    }\r\n\r\n    const hostAndPath: string = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\r\n    const queryParams: {[key: string]: string | Array<string>} = {\r\n      v: this._config.apiVersion || 'quarterly',\r\n      callback: callbackName,\r\n      key: this._config.apiKey,\r\n      client: this._config.clientId,\r\n      channel: this._config.channel,\r\n      libraries: this._config.libraries,\r\n      region: this._config.region,\r\n      language: this._config.language || (this.localeId !== 'en-US' ? this.localeId : null),\r\n    };\r\n    const params: string = Object.keys(queryParams)\r\n                               .filter((k: string) => queryParams[k] != null)\r\n                               .filter((k: string) => {\r\n                                 // remove empty arrays\r\n                                 return !Array.isArray(queryParams[k]) ||\r\n                                     (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\r\n                               })\r\n                               .map((k: string) => {\r\n                                 // join arrays as comma seperated strings\r\n                                 let i = queryParams[k];\r\n                                 if (Array.isArray(i)) {\r\n                                   return {key: k, value: i.join(',')};\r\n                                 }\r\n                                 return {key: k, value: queryParams[k]};\r\n                               })\r\n                               .map((entry: {key: string, value: string}) => {\r\n                                 return `${entry.key}=${entry.value}`;\r\n                               })\r\n                               .join('&');\r\n    return `${protocol}//${hostAndPath}?${params}`;\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmMarker } from './../../directives/marker';\r\n\r\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\r\nimport { Marker } from './../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable()\r\nexport class MarkerManager {\r\n  protected _markers: Map<AgmMarker, Promise<Marker>> =\r\n      new Map<AgmMarker, Promise<Marker>>();\r\n\r\n  constructor(protected _mapsWrapper: GoogleMapsAPIWrapper, protected _zone: NgZone) {}\r\n\r\n  async convertAnimation(uiAnim: 'BOUNCE' | 'DROP' | null): Promise<any>{\r\n    if (uiAnim === null) {\r\n      return null;\r\n    } else {\r\n      return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\r\n    }\r\n  }\r\n\r\n  deleteMarker(marker: AgmMarker): Promise<void> {\r\n    const m = this._markers.get(marker);\r\n    if (m == null) {\r\n      // marker already deleted\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((m: Marker) => {\r\n      return this._zone.run(() => {\r\n        m.setMap(null);\r\n        this._markers.delete(marker);\r\n      });\r\n    });\r\n  }\r\n\r\n  updateMarkerPosition(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then(\r\n        (m: Marker) => m.setPosition({lat: marker.latitude, lng: marker.longitude}));\r\n  }\r\n\r\n  updateTitle(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setTitle(marker.title));\r\n  }\r\n\r\n  updateLabel(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => { m.setLabel(marker.label); });\r\n  }\r\n\r\n  updateDraggable(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setDraggable(marker.draggable));\r\n  }\r\n\r\n  updateIcon(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setIcon(marker.iconUrl));\r\n  }\r\n\r\n  updateOpacity(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setOpacity(marker.opacity));\r\n  }\r\n\r\n  updateVisible(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setVisible(marker.visible));\r\n  }\r\n\r\n  updateZIndex(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setZIndex(marker.zIndex));\r\n  }\r\n\r\n  updateClickable(marker: AgmMarker): Promise<void> {\r\n    return this._markers.get(marker).then((m: Marker) => m.setClickable(marker.clickable));\r\n  }\r\n\r\n  async updateAnimation(marker: AgmMarker) {\r\n    const m = await this._markers.get(marker);\r\n    m.setAnimation(await this.convertAnimation(marker.animation));\r\n  }\r\n\r\n  addMarker(marker: AgmMarker) {\r\n    const markerPromise = new Promise<Marker>(async (resolve) =>\r\n     this._mapsWrapper.createMarker({\r\n        position: {lat: marker.latitude, lng: marker.longitude},\r\n        label: marker.label,\r\n        draggable: marker.draggable,\r\n        icon: marker.iconUrl,\r\n        opacity: marker.opacity,\r\n        visible: marker.visible,\r\n        zIndex: marker.zIndex,\r\n        title: marker.title,\r\n        clickable: marker.clickable,\r\n        animation: await this.convertAnimation(marker.animation),\r\n      }).then(resolve));\r\n    this._markers.set(marker, markerPromise);\r\n  }\r\n\r\n  getNativeMarker(marker: AgmMarker): Promise<Marker> {\r\n    return this._markers.get(marker);\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, marker: AgmMarker): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._markers.get(marker).then((m: Marker) => {\r\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmInfoWindow } from '../../directives/info-window';\r\n\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { InfoWindow, InfoWindowOptions } from '../google-maps-types';\r\nimport { MarkerManager } from './marker-manager';\r\n\r\n@Injectable()\r\nexport class InfoWindowManager {\r\n  private _infoWindows: Map<AgmInfoWindow, Promise<InfoWindow>> =\r\n      new Map<AgmInfoWindow, Promise<InfoWindow>>();\r\n\r\n  constructor(\r\n      private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone,\r\n      private _markerManager: MarkerManager) {}\r\n\r\n  deleteInfoWindow(infoWindow: AgmInfoWindow): Promise<void> {\r\n    const iWindow = this._infoWindows.get(infoWindow);\r\n    if (iWindow == null) {\r\n      // info window already deleted\r\n      return Promise.resolve();\r\n    }\r\n    return iWindow.then((i: InfoWindow) => {\r\n      return this._zone.run(() => {\r\n        i.close();\r\n        this._infoWindows.delete(infoWindow);\r\n      });\r\n    });\r\n  }\r\n\r\n  setPosition(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setPosition({\r\n      lat: infoWindow.latitude,\r\n      lng: infoWindow.longitude,\r\n    }));\r\n  }\r\n\r\n  setZIndex(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow)\r\n        .then((i: InfoWindow) => i.setZIndex(infoWindow.zIndex));\r\n  }\r\n\r\n  open(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow).then((w) => {\r\n      if (infoWindow.hostMarker != null) {\r\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\r\n          return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\r\n        });\r\n      }\r\n      return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\r\n    });\r\n  }\r\n\r\n  close(infoWindow: AgmInfoWindow): Promise<void> {\r\n    return this._infoWindows.get(infoWindow).then((w) => w.close());\r\n  }\r\n\r\n  setOptions(infoWindow: AgmInfoWindow, options: InfoWindowOptions) {\r\n    return this._infoWindows.get(infoWindow).then((i: InfoWindow) => i.setOptions(options));\r\n  }\r\n\r\n  addInfoWindow(infoWindow: AgmInfoWindow) {\r\n    const options: InfoWindowOptions = {\r\n      content: infoWindow.content,\r\n      maxWidth: infoWindow.maxWidth,\r\n      zIndex: infoWindow.zIndex,\r\n      disableAutoPan: infoWindow.disableAutoPan,\r\n    };\r\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\r\n      options.position = {lat: infoWindow.latitude, lng: infoWindow.longitude};\r\n    }\r\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\r\n    this._infoWindows.set(infoWindow, infoWindowPromise);\r\n  }\r\n\r\n   /**\r\n    * Creates a Google Maps event listener for the given InfoWindow as an Observable\r\n    */\r\n  createEventObservable<T>(eventName: string, infoWindow: AgmInfoWindow): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._infoWindows.get(infoWindow).then((i: InfoWindow) => {\r\n        i.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmKmlLayer } from './../../directives/kml-layer';\r\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\r\nimport { KmlLayer, KmlLayerOptions } from './../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n/**\r\n * Manages all KML Layers for a Google Map instance.\r\n */\r\n@Injectable()\r\nexport class KmlLayerManager {\r\n  private _layers: Map<AgmKmlLayer, Promise<KmlLayer>> =\r\n      new Map<AgmKmlLayer, Promise<KmlLayer>>();\r\n\r\n  constructor(private _wrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  /**\r\n   * Adds a new KML Layer to the map.\r\n   */\r\n  addKmlLayer(layer: AgmKmlLayer) {\r\n    const newLayer = this._wrapper.getNativeMap().then(m => {\r\n      return new google.maps.KmlLayer({\r\n        clickable: layer.clickable,\r\n        map: m,\r\n        preserveViewport: layer.preserveViewport,\r\n        screenOverlays: layer.screenOverlays,\r\n        suppressInfoWindows: layer.suppressInfoWindows,\r\n        url: layer.url,\r\n        zIndex: layer.zIndex,\r\n      } as KmlLayerOptions);\r\n    });\r\n    this._layers.set(layer, newLayer);\r\n  }\r\n\r\n  setOptions(layer: AgmKmlLayer, options: KmlLayerOptions) {\r\n    this._layers.get(layer).then(l => l.setOptions(options));\r\n  }\r\n\r\n  deleteKmlLayer(layer: AgmKmlLayer) {\r\n    this._layers.get(layer).then(l => {\r\n      l.setMap(null);\r\n      this._layers.delete(layer);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a Google Maps event listener for the given KmlLayer as an Observable\r\n   */\r\n  createEventObservable<T>(eventName: string, layer: AgmKmlLayer): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._layers.get(layer).then((m: KmlLayer) => {\r\n        m.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AgmBicyclingLayer } from '../../directives/bicycling-layer';\r\nimport { AgmTransitLayer } from '../../directives/transit-layer';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { BicyclingLayer, BicyclingLayerOptions, GoogleMap, TransitLayer, TransitLayerOptions } from '../google-maps-types';\r\n\r\n/**\r\n * This class manages Transit and Bicycling Layers for a Google Map instance.\r\n */\r\n\r\n@Injectable()\r\nexport class LayerManager {\r\n    private _layers: Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>> =\r\n        new Map<AgmTransitLayer | AgmBicyclingLayer, Promise<TransitLayer | BicyclingLayer>>();\r\n\r\n    constructor(private _wrapper: GoogleMapsAPIWrapper) {}\r\n\r\n    /**\r\n     * Adds a transit layer to a map instance.\r\n     * @param {AgmTransitLayer} layer - a TransitLayer object\r\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\r\n     * @returns void\r\n     */\r\n    addTransitLayer(layer: AgmTransitLayer, options: TransitLayerOptions): void {\r\n        const newLayer = this._wrapper.createTransitLayer(options);\r\n        this._layers.set(layer, newLayer);\r\n    }\r\n\r\n    /**\r\n     * Adds a bicycling layer to a map instance.\r\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\r\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\r\n     * @returns void\r\n     */\r\n    addBicyclingLayer(layer: AgmBicyclingLayer, options: BicyclingLayerOptions): void {\r\n        const newLayer = this._wrapper.createBicyclingLayer(options);\r\n        this._layers.set(layer, newLayer);\r\n    }\r\n\r\n    /**\r\n     * Deletes a map layer\r\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\r\n     * @returns  Promise<void>\r\n     */\r\n    deleteLayer(layer: AgmTransitLayer | AgmBicyclingLayer): Promise<void> {\r\n        return this._layers.get(layer).then(currentLayer => {\r\n            currentLayer.setMap(null);\r\n            this._layers.delete(layer);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide/Show a google map layer\r\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\r\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\r\n     * @returns Promise<void>\r\n     */\r\n    toggleLayerVisibility(layer: AgmTransitLayer | AgmBicyclingLayer, options: TransitLayerOptions | BicyclingLayerOptions): Promise<void> {\r\n        return this._layers.get(layer).then(currentLayer => {\r\n            if (!options.visible) {\r\n                currentLayer.setMap(null);\r\n                return;\r\n            } else {\r\n               return this._wrapper.getNativeMap().then( (map: GoogleMap) => {\r\n                   currentLayer.setMap(map);\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { MapsAPILoader } from './maps-api-loader';\r\n\r\n/**\r\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\r\n * Tag.\r\n * It's important that the Google Maps API script gets loaded first on the page.\r\n */\r\nexport class NoOpMapsAPILoader implements MapsAPILoader {\r\n  load(): Promise<void> {\r\n    if (!(window as any).google || !(window as any).google.maps) {\r\n      throw new Error(\r\n          'Google Maps API not loaded on page. Make sure window.google.maps is available!');\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n}\r\n","import { fromEventPattern, Observable } from 'rxjs';\r\nimport { MapsEventListener, MVCArray } from '../services/google-maps-types';\r\n\r\nexport function createMVCEventObservable<T>(array: MVCArray<T>): Observable<MVCEvent<T>>{\r\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\r\n  return fromEventPattern(\r\n    (handler: Function) => eventNames.map(evName => array.addListener(evName,\r\n      (index: number, previous?: T) => handler.apply(array, [ {'newArr': array.getArray(), evName, index, previous} as MVCEvent<T>]))),\r\n    (_handler: Function, evListeners: MapsEventListener[]) => evListeners.forEach(evListener => evListener.remove()));\r\n}\r\n\r\nexport interface MVCEvent<T> {\r\n  newArr: T[];\r\n  evName: MvcEventType;\r\n  index: number;\r\n  previous?: T;\r\n}\r\n\r\nexport type MvcEventType = 'insert_at' | 'remove_at' | 'set_at';\r\n\r\nexport class MvcArrayMock<T> implements MVCArray<T> {\r\n  private vals: T[] = [];\r\n  private listeners: {\r\n    'remove_at': Function[];\r\n    'insert_at': Function[];\r\n    'set_at': Function[];\r\n    [key: string]: Function[];\r\n  } = {\r\n    'remove_at': [] as Function[],\r\n    'insert_at': [] as Function[],\r\n    'set_at': [] as Function[],\r\n  };\r\n  clear(): void {\r\n    for (let i = this.vals.length - 1; i >= 0; i--) {\r\n        this.removeAt(i);\r\n    }\r\n  }\r\n  getArray(): T[] {\r\n    return [...this.vals];\r\n  }\r\n  getAt(i: number): T {\r\n    return this.vals[i];\r\n  }\r\n  getLength(): number {\r\n    return this.vals.length;\r\n  }\r\n  insertAt(i: number, elem: T): void {\r\n    this.vals.splice(i, 0, elem);\r\n    this.listeners.insert_at.map(listener => listener(i));\r\n  }\r\n  pop(): T {\r\n    const deleted = this.vals.pop();\r\n    this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\r\n    return deleted;\r\n  }\r\n  push(elem: T): number {\r\n    this.vals.push(elem);\r\n    this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\r\n    return this.vals.length;\r\n  }\r\n  removeAt(i: number): T {\r\n    const deleted = this.vals.splice(i, 1)[0];\r\n    this.listeners.remove_at.map(listener => listener(i, deleted));\r\n    return deleted;\r\n  }\r\n  setAt(i: number, elem: T): void {\r\n    const deleted = this.vals[i];\r\n    this.vals[i] = elem;\r\n    this.listeners.set_at.map(listener => listener(i, deleted));\r\n  }\r\n  forEach(callback: (elem: T, i: number) => void): void {\r\n    this.vals.forEach(callback);\r\n  }\r\n  addListener(eventName: string, handler: Function): MapsEventListener {\r\n    const listenerArr = this.listeners[eventName];\r\n    listenerArr.push(handler);\r\n    return {\r\n        remove: () => {\r\n            listenerArr.splice(listenerArr.indexOf(handler), 1);\r\n        },\r\n    };\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { merge, Observable, Observer } from 'rxjs';\r\nimport { map, skip, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { AgmPolygon, PathChangePolygonPathEvent, PathCollectionChangePolygonPathEvent, PolygonPathEvent } from '../../directives/polygon';\r\nimport { createMVCEventObservable, MVCEvent } from '../../utils/mvcarray-utils';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { LatLng, MVCArray, Polygon } from '../google-maps-types';\r\n\r\n@Injectable()\r\nexport class PolygonManager {\r\n  private _polygons: Map<AgmPolygon, Promise<Polygon>> =\r\n    new Map<AgmPolygon, Promise<Polygon>>();\r\n\r\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) { }\r\n\r\n  addPolygon(path: AgmPolygon) {\r\n    const polygonPromise = this._mapsWrapper.createPolygon({\r\n      clickable: path.clickable,\r\n      draggable: path.draggable,\r\n      editable: path.editable,\r\n      fillColor: path.fillColor,\r\n      fillOpacity: path.fillOpacity,\r\n      geodesic: path.geodesic,\r\n      paths: path.paths,\r\n      strokeColor: path.strokeColor,\r\n      strokeOpacity: path.strokeOpacity,\r\n      strokeWeight: path.strokeWeight,\r\n      visible: path.visible,\r\n      zIndex: path.zIndex,\r\n    });\r\n    this._polygons.set(path, polygonPromise);\r\n  }\r\n\r\n  updatePolygon(polygon: AgmPolygon): Promise<void> {\r\n    const m = this._polygons.get(polygon);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polygon) => this._zone.run(() => { l.setPaths(polygon.paths); }));\r\n  }\r\n\r\n  setPolygonOptions(path: AgmPolygon, options: { [propName: string]: any }): Promise<void> {\r\n    return this._polygons.get(path).then((l: Polygon) => { l.setOptions(options); });\r\n  }\r\n\r\n  deletePolygon(paths: AgmPolygon): Promise<void> {\r\n    const m = this._polygons.get(paths);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polygon) => {\r\n      return this._zone.run(() => {\r\n        l.setMap(null);\r\n        this._polygons.delete(paths);\r\n      });\r\n    });\r\n  }\r\n\r\n  getPath(polygon: AgmPolygon): Promise<Array<LatLng>> {\r\n    return this._polygons.get(polygon)\r\n      .then((polygon) => polygon.getPath().getArray());\r\n  }\r\n\r\n  getPaths(polygon: AgmPolygon): Promise<Array<Array<LatLng>>> {\r\n    return this._polygons.get(polygon)\r\n      .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, path: AgmPolygon): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._polygons.get(path).then((l: Polygon) => {\r\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n\r\n  async createPathEventObservable(agmPolygon: AgmPolygon): Promise<Observable<PolygonPathEvent<any>>> {\r\n    const polygon = await this._polygons.get(agmPolygon);\r\n    const paths = polygon.getPaths();\r\n    const pathsChanges$ = createMVCEventObservable(paths);\r\n    return pathsChanges$.pipe(startWith(({ newArr: paths.getArray() } as MVCEvent<MVCArray<LatLng>>)), // in order to subscribe to them all\r\n      switchMap(parentMVEvent => merge(...// rest parameter\r\n        parentMVEvent.newArr.map((chMVC, index) =>\r\n          createMVCEventObservable(chMVC)\r\n          .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\r\n        .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\r\n      skip(1), // skip the manually added event\r\n      map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\r\n        let retVal;\r\n        if (!chMVCEvent) {\r\n          retVal = {\r\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\r\n            eventName: parentMVEvent.evName,\r\n            index: parentMVEvent.index,\r\n          } as PathCollectionChangePolygonPathEvent;\r\n          if (parentMVEvent.previous) {\r\n            retVal.previous =  parentMVEvent.previous.getArray();\r\n          }\r\n        } else {\r\n          retVal = {\r\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\r\n            pathIndex,\r\n            eventName: chMVCEvent.evName,\r\n            index: chMVCEvent.index,\r\n          } as PathChangePolygonPathEvent;\r\n          if (chMVCEvent.previous) {\r\n            retVal.previous = chMVCEvent.previous;\r\n          }\r\n        }\r\n        return retVal;\r\n      }));\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmPolyline, PathEvent } from '../../directives/polyline';\r\nimport { AgmPolylinePoint } from '../../directives/polyline-point';\r\nimport { createMVCEventObservable } from '../../utils/mvcarray-utils';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { IconSequence, LatLng, LatLngLiteral, MVCArray, Polyline } from '../google-maps-types';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable()\r\nexport class PolylineManager {\r\n  private _polylines: Map<AgmPolyline, Promise<Polyline>> =\r\n      new Map<AgmPolyline, Promise<Polyline>>();\r\n\r\n  constructor(private _mapsWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  private static _convertPoints(line: AgmPolyline): Array<LatLngLiteral> {\r\n    const path = line._getPoints().map((point: AgmPolylinePoint) => {\r\n      return {lat: point.latitude, lng: point.longitude} as LatLngLiteral;\r\n    });\r\n    return path;\r\n  }\r\n\r\n  private static _convertPath(path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\r\n  'FORWARD_CLOSED_ARROW' | string): number | string{\r\n    const symbolPath = google.maps.SymbolPath[path];\r\n    if (typeof symbolPath === 'number') {\r\n      return symbolPath;\r\n    } else{\r\n      return path;\r\n    }\r\n  }\r\n\r\n  private static _convertIcons(line: AgmPolyline): Array<IconSequence> {\r\n    const icons = line._getIcons().map(agmIcon => ({\r\n      fixedRotation: agmIcon.fixedRotation,\r\n      offset: agmIcon.offset,\r\n      repeat: agmIcon.repeat,\r\n      icon: {\r\n        anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\r\n        fillColor: agmIcon.fillColor,\r\n        fillOpacity: agmIcon.fillOpacity,\r\n        path: PolylineManager._convertPath(agmIcon.path),\r\n        rotation: agmIcon.rotation,\r\n        scale: agmIcon.scale,\r\n        strokeColor: agmIcon.strokeColor,\r\n        strokeOpacity: agmIcon.strokeOpacity,\r\n        strokeWeight: agmIcon.strokeWeight,\r\n      },\r\n    } as IconSequence));\r\n    // prune undefineds;\r\n    icons.forEach(icon => {\r\n      Object.entries(icon).forEach(([key, val]) => {\r\n        if (typeof val === 'undefined') {\r\n          delete (icon as any)[key];\r\n        }\r\n      });\r\n      if (typeof icon.icon.anchor.x === 'undefined' ||\r\n        typeof icon.icon.anchor.y === 'undefined') {\r\n          delete icon.icon.anchor;\r\n        }\r\n    });\r\n    return icons;\r\n  }\r\n\r\n  addPolyline(line: AgmPolyline) {\r\n    const polylinePromise = this._mapsWrapper.getNativeMap()\r\n    .then(() => [ PolylineManager._convertPoints(line),\r\n                  PolylineManager._convertIcons(line)])\r\n    .then(([path, icons]: [LatLngLiteral[], IconSequence[]]) =>\r\n      this._mapsWrapper.createPolyline({\r\n        clickable: line.clickable,\r\n        draggable: line.draggable,\r\n        editable: line.editable,\r\n        geodesic: line.geodesic,\r\n        strokeColor: line.strokeColor,\r\n        strokeOpacity: line.strokeOpacity,\r\n        strokeWeight: line.strokeWeight,\r\n        visible: line.visible,\r\n        zIndex: line.zIndex,\r\n        path: path,\r\n        icons: icons,\r\n    }));\r\n    this._polylines.set(line, polylinePromise);\r\n  }\r\n\r\n  updatePolylinePoints(line: AgmPolyline): Promise<void> {\r\n    const path = PolylineManager._convertPoints(line);\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polyline) => { return this._zone.run(() => { l.setPath(path); }); });\r\n  }\r\n\r\n  async updateIconSequences(line: AgmPolyline): Promise<void> {\r\n    await this._mapsWrapper.getNativeMap();\r\n    const icons = PolylineManager._convertIcons(line);\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return;\r\n    }\r\n    return m.then(l => this._zone.run(() => l.setOptions({icons: icons}) ) );\r\n  }\r\n\r\n  setPolylineOptions(line: AgmPolyline, options: {[propName: string]: any}):\r\n      Promise<void> {\r\n    return this._polylines.get(line).then((l: Polyline) => { l.setOptions(options); });\r\n  }\r\n\r\n  deletePolyline(line: AgmPolyline): Promise<void> {\r\n    const m = this._polylines.get(line);\r\n    if (m == null) {\r\n      return Promise.resolve();\r\n    }\r\n    return m.then((l: Polyline) => {\r\n      return this._zone.run(() => {\r\n        l.setMap(null);\r\n        this._polylines.delete(line);\r\n      });\r\n    });\r\n  }\r\n\r\n  private async getMVCPath(agmPolyline: AgmPolyline): Promise<MVCArray<LatLng>> {\r\n    const polyline = await this._polylines.get(agmPolyline);\r\n    return polyline.getPath();\r\n  }\r\n\r\n  async getPath(agmPolyline: AgmPolyline): Promise<Array<LatLng>> {\r\n    return (await this.getMVCPath(agmPolyline)).getArray();\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, line: AgmPolyline): Observable<T> {\r\n    return new Observable((observer: Observer<T>) => {\r\n      this._polylines.get(line).then((l: Polyline) => {\r\n        l.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n    });\r\n  }\r\n\r\n  async createPathEventObservable(line: AgmPolyline): Promise<Observable<PathEvent>> {\r\n    const mvcPath = await this.getMVCPath(line);\r\n    return createMVCEventObservable(mvcPath);\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport { AgmRectangle } from '../../directives/rectangle';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport * as mapTypes from '../google-maps-types';\r\n\r\n@Injectable()\r\nexport class RectangleManager {\r\n  private _rectangles: Map<AgmRectangle, Promise<mapTypes.Rectangle>> =\r\n      new Map<AgmRectangle, Promise<mapTypes.Rectangle>>();\r\n\r\n  constructor(private _apiWrapper: GoogleMapsAPIWrapper, private _zone: NgZone) {}\r\n\r\n  addRectangle(rectangle: AgmRectangle) {\r\n    this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\r\n      bounds: {\r\n        north: rectangle.north,\r\n        east: rectangle.east,\r\n        south: rectangle.south,\r\n        west: rectangle.west,\r\n      },\r\n      clickable: rectangle.clickable,\r\n      draggable: rectangle.draggable,\r\n      editable: rectangle.editable,\r\n      fillColor: rectangle.fillColor,\r\n      fillOpacity: rectangle.fillOpacity,\r\n      strokeColor: rectangle.strokeColor,\r\n      strokeOpacity: rectangle.strokeOpacity,\r\n      strokePosition: rectangle.strokePosition,\r\n      strokeWeight: rectangle.strokeWeight,\r\n      visible: rectangle.visible,\r\n      zIndex: rectangle.zIndex,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Removes the given rectangle from the map.\r\n   */\r\n  removeRectangle(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      r.setMap(null);\r\n      this._rectangles.delete(rectangle);\r\n    });\r\n  }\r\n\r\n  setOptions(rectangle: AgmRectangle, options: mapTypes.RectangleOptions): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\r\n  }\r\n\r\n  getBounds(rectangle: AgmRectangle): Promise<mapTypes.LatLngBounds> {\r\n    return this._rectangles.get(rectangle).then((r) => r.getBounds());\r\n  }\r\n\r\n  setBounds(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setBounds({\r\n        north: rectangle.north,\r\n        east: rectangle.east,\r\n        south: rectangle.south,\r\n        west: rectangle.west,\r\n      });\r\n    });\r\n  }\r\n\r\n  setEditable(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setEditable(rectangle.editable);\r\n    });\r\n  }\r\n\r\n  setDraggable(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setDraggable(rectangle.draggable);\r\n    });\r\n  }\r\n\r\n  setVisible(rectangle: AgmRectangle): Promise<void> {\r\n    return this._rectangles.get(rectangle).then((r) => {\r\n      return r.setVisible(rectangle.visible);\r\n    });\r\n  }\r\n\r\n  createEventObservable<T>(eventName: string, rectangle: AgmRectangle): Observable<T> {\r\n    return Observable.create((observer: Observer<T>) => {\r\n      let listener: mapTypes.MapsEventListener = null;\r\n      this._rectangles.get(rectangle).then((r) => {\r\n        listener = r.addListener(eventName, (e: T) => this._zone.run(() => observer.next(e)));\r\n      });\r\n\r\n      return () => {\r\n        if (listener !== null) {\r\n          listener.remove();\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LayerManager } from '../services/managers/layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n/*\r\n * This directive adds a bicycling layer to a google map instance\r\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\r\n * */\r\n@Directive({\r\n    selector: 'agm-bicycling-layer',\r\n})\r\n\r\nexport class AgmBicyclingLayer implements OnInit, OnChanges, OnDestroy{\r\n    private _addedToManager = false;\r\n    private _id: string = (layerId++).toString();\r\n\r\n    /**\r\n     * Hide/show bicycling layer\r\n     */\r\n    @Input() visible = true;\r\n\r\n    constructor( private _manager: LayerManager ) {}\r\n\r\n    ngOnInit() {\r\n        if (this._addedToManager) {\r\n            return;\r\n        }\r\n        this._manager.addBicyclingLayer(this, {visible: this.visible});\r\n        this._addedToManager = true;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this._addedToManager) {\r\n            return;\r\n        }\r\n        if (changes['visible'] != null) {\r\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    id(): string { return this._id; }\r\n\r\n    /** @internal */\r\n    toString(): string { return `AgmBicyclingLayer-${this._id.toString()}`; }\r\n\r\n    /** @internal */\r\n    ngOnDestroy() {\r\n        this._manager.deleteLayer(this);\r\n    }\r\n\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MouseEvent } from '../map-types';\r\nimport { LatLng, LatLngBounds, LatLngLiteral, MouseEvent as MapMouseEvent } from '../services/google-maps-types';\r\nimport { CircleManager } from '../services/managers/circle-manager';\r\n\r\n@Directive({\r\n  selector: 'agm-circle',\r\n})\r\nexport class AgmCircle implements OnInit, OnChanges, OnDestroy {\r\n  /**\r\n   * The latitude position of the circle (required).\r\n   */\r\n  @Input() latitude: number;\r\n\r\n  /**\r\n   * The clickable position of the circle (required).\r\n   */\r\n  @Input() longitude: number;\r\n\r\n  /**\r\n   * Indicates whether this Circle handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this circle over the map. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('circleDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this circle by dragging the control points shown at\r\n   * the center and around the circumference of the circle. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * The fill color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The fill opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * The radius in meters on the Earth's surface.\r\n   */\r\n  @Input() radius = 0;\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke position. Defaults to CENTER.\r\n   * This property is not supported on Internet Explorer 8 and earlier.\r\n   */\r\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight = 0;\r\n\r\n  /**\r\n   * Whether this circle is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the circle's center is changed.\r\n   */\r\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the circle.\r\n   */\r\n  @Output() circleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the circle.\r\n   */\r\n  @Output() circleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the circle.\r\n   */\r\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the circle.\r\n   */\r\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the circle.\r\n   */\r\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the circle.\r\n   */\r\n  @Output() mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the circle.\r\n   */\r\n  @Output() mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on circle mouseout.\r\n   */\r\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on circle mouseover.\r\n   */\r\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mouseup event is fired on the circle.\r\n   */\r\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the circle's radius is changed.\r\n   */\r\n  @Output() radiusChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /**\r\n   * This event is fired when the circle is right-clicked on.\r\n   */\r\n  @Output() rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  private _circleAddedToManager = false;\r\n\r\n  private static _mapOptions: string[] = [\r\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\r\n    'visible', 'zIndex', 'clickable',\r\n  ];\r\n\r\n  private _eventSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private _manager: CircleManager) {}\r\n\r\n  /** @internal */\r\n  ngOnInit() {\r\n    this._manager.addCircle(this);\r\n    this._circleAddedToManager = true;\r\n    this._registerEventListeners();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\r\n    if (!this._circleAddedToManager) {\r\n      return;\r\n    }\r\n    if (changes['latitude'] || changes['longitude']) {\r\n      this._manager.setCenter(this);\r\n    }\r\n    if (changes['editable']) {\r\n      this._manager.setEditable(this);\r\n    }\r\n    if (changes['draggable']) {\r\n      this._manager.setDraggable(this);\r\n    }\r\n    if (changes['visible']) {\r\n      this._manager.setVisible(this);\r\n    }\r\n    if (changes['radius']) {\r\n      this._manager.setRadius(this);\r\n    }\r\n    this._updateCircleOptionsChanges(changes);\r\n  }\r\n\r\n  private _updateCircleOptionsChanges(changes: {[propName: string]: SimpleChange}) {\r\n    let options: {[propName: string]: any} = {};\r\n    let optionKeys =\r\n        Object.keys(changes).filter(k => AgmCircle._mapOptions.indexOf(k) !== -1);\r\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\r\n    if (optionKeys.length > 0) {\r\n      this._manager.setOptions(this, options);\r\n    }\r\n  }\r\n\r\n  private _registerEventListeners() {\r\n    let events: Map<string, EventEmitter<any>> = new Map<string, EventEmitter<any>>();\r\n    events.set('center_changed', this.centerChange);\r\n    events.set('click', this.circleClick);\r\n    events.set('dblclick', this.circleDblClick);\r\n    events.set('drag', this.drag);\r\n    events.set('dragend', this.dragEnd);\r\n    events.set('dragstart', this.dragStart);\r\n    events.set('mousedown', this.mouseDown);\r\n    events.set('mousemove', this.mouseMove);\r\n    events.set('mouseout', this.mouseOut);\r\n    events.set('mouseover', this.mouseOver);\r\n    events.set('mouseup', this.mouseUp);\r\n    events.set('radius_changed', this.radiusChange);\r\n    events.set('rightclick', this.rightClick);\r\n\r\n    events.forEach((eventEmitter, eventName) => {\r\n      this._eventSubscriptions.push(\r\n          this._manager.createEventObservable<MapMouseEvent>(eventName, this).subscribe((value) => {\r\n            switch (eventName) {\r\n              case 'radius_changed':\r\n                this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\r\n                break;\r\n              case 'center_changed':\r\n                this._manager.getCenter(this).then(\r\n                    (center) =>\r\n                        eventEmitter.emit({lat: center.lat(), lng: center.lng()} as LatLngLiteral));\r\n                break;\r\n              default:\r\n                eventEmitter.emit(\r\n                    {coords: {lat: value.latLng.lat(), lng: value.latLng.lng()}} as MouseEvent);\r\n            }\r\n          }));\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._eventSubscriptions.forEach(function(s: Subscription) { s.unsubscribe(); });\r\n    this._eventSubscriptions = null;\r\n    this._manager.removeCircle(this);\r\n  }\r\n\r\n  /**\r\n   * Gets the LatLngBounds of this Circle.\r\n   */\r\n  getBounds(): Promise<LatLngBounds> { return this._manager.getBounds(this); }\r\n\r\n  getCenter(): Promise<LatLng> { return this._manager.getCenter(this); }\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataMouseEvent, DataOptions } from './../services/google-maps-types';\r\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n/**\r\n * AgmDataLayer enables the user to add data layers to the map.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from 'angular2/core';\r\n * import { AgmMap, AgmDataLayer } from\r\n * 'angular-google-maps/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  directives: [AgmMap, AgmDataLayer],\r\n *  styles: [`\r\n *    .agm-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\r\n * \t  </agm-data-layer>\r\n * </agm-map>\r\n *  `\r\n * })\r\n * export class MyMapCmp {\r\n *   lat: number = -25.274449;\r\n *   lng: number = 133.775060;\r\n *   zoom: number = 5;\r\n *\r\n * clicked(clickEvent) {\r\n *    console.log(clickEvent);\r\n *  }\r\n *\r\n *  styleFunc(feature) {\r\n *    return ({\r\n *      clickable: false,\r\n *      fillColor: feature.getProperty('color'),\r\n *      strokeWeight: 1\r\n *    });\r\n *  }\r\n *\r\n *  geoJsonObject: Object = {\r\n *    \"type\": \"FeatureCollection\",\r\n *    \"features\": [\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"G\",\r\n *          \"color\": \"blue\",\r\n *          \"rank\": \"7\",\r\n *          \"ascii\": \"71\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\r\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\r\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\r\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\r\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\r\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\r\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\r\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"o\",\r\n *          \"color\": \"red\",\r\n *          \"rank\": \"15\",\r\n *          \"ascii\": \"111\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\r\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\r\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\r\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\r\n *            ],\r\n *            [\r\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\r\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"o\",\r\n *          \"color\": \"yellow\",\r\n *          \"rank\": \"15\",\r\n *          \"ascii\": \"111\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\r\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\r\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\r\n *              [132.71, -25.64], [131.87, -25.76]\r\n *            ],\r\n *            [\r\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\r\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"g\",\r\n *          \"color\": \"blue\",\r\n *          \"rank\": \"7\",\r\n *          \"ascii\": \"103\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\r\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\r\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\r\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\r\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\r\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\r\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\r\n *            ],\r\n *            [\r\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\r\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"l\",\r\n *          \"color\": \"green\",\r\n *          \"rank\": \"12\",\r\n *          \"ascii\": \"108\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      },\r\n *      {\r\n *        \"type\": \"Feature\",\r\n *        \"properties\": {\r\n *          \"letter\": \"e\",\r\n *          \"color\": \"red\",\r\n *          \"rank\": \"5\",\r\n *          \"ascii\": \"101\"\r\n *        },\r\n *        \"geometry\": {\r\n *          \"type\": \"Polygon\",\r\n *          \"coordinates\": [\r\n *            [\r\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\r\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\r\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\r\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\r\n *              [144.31, -28.26], [144.14, -27.41]\r\n *            ],\r\n *            [\r\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\r\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\r\n *            ]\r\n *          ]\r\n *        }\r\n *      }\r\n *    ]\r\n *  };\r\n * }\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-data-layer',\r\n})\r\nexport class AgmDataLayer implements OnInit, OnDestroy, OnChanges {\r\n  private static _dataOptionsAttributes: Array<string> = ['style'];\r\n\r\n  private _addedToManager = false;\r\n  private _id: string = (layerId++).toString();\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  /**\r\n   * This event is fired when a feature in the layer is clicked.\r\n   */\r\n  @Output() layerClick: EventEmitter<DataMouseEvent> = new EventEmitter<DataMouseEvent>();\r\n\r\n  /**\r\n   * The geoJson to be displayed\r\n   */\r\n  @Input() geoJson: Object | string | null = null;\r\n\r\n  /**\r\n   * The layer's style function.\r\n   */\r\n  @Input() style: () => void;\r\n\r\n  constructor(private _manager: DataLayerManager) { }\r\n\r\n  ngOnInit() {\r\n    if (this._addedToManager) {\r\n      return;\r\n    }\r\n    this._manager.addDataLayer(this);\r\n    this._addedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const listeners = [\r\n      { name: 'click', handler: (ev: DataMouseEvent) => this.layerClick.emit(ev) },\r\n    ];\r\n    listeners.forEach((obj) => {\r\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return `AgmDataLayer-${this._id.toString()}`; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._manager.deleteDataLayer(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach(s => s.unsubscribe());\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this._addedToManager) {\r\n      return;\r\n    }\r\n\r\n    var geoJsonChange = changes['geoJson'];\r\n    if (geoJsonChange) {\r\n      this._manager.updateGeoJson(this, geoJsonChange.currentValue);\r\n    }\r\n\r\n    let dataOptions: DataOptions = {};\r\n\r\n    AgmDataLayer._dataOptionsAttributes.forEach(k => (dataOptions as any)[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : (this as any)[k]);\r\n\r\n    this._manager.setDataOptions(this, dataOptions);\r\n  }\r\n}\r\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, Self } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FitBoundsAccessor, FitBoundsDetails, FitBoundsService } from '../services/fit-bounds';\r\n\r\n/**\r\n * Adds the given directive to the auto fit bounds feature when the value is true.\r\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\r\n * @example\r\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\r\n */\r\n@Directive({\r\n  selector: '[agmFitBounds]',\r\n})\r\nexport class AgmFitBounds implements OnInit, OnDestroy, OnChanges {\r\n  /**\r\n   * If the value is true, the element gets added to the bounds of the map.\r\n   * Default: true.\r\n   */\r\n  @Input() agmFitBounds = true;\r\n\r\n  private _destroyed$: Subject<void> = new Subject<void>();\r\n  private _latestFitBoundsDetails: FitBoundsDetails | null = null;\r\n\r\n  constructor(\r\n    @Self() private readonly _fitBoundsAccessor: FitBoundsAccessor,\r\n    private readonly _fitBoundsService: FitBoundsService,\r\n  ) {}\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnChanges() {\r\n    this._updateBounds();\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this._fitBoundsAccessor\r\n      .getFitBoundsDetails$()\r\n      .pipe(\r\n        distinctUntilChanged(\r\n          (x: FitBoundsDetails, y: FitBoundsDetails) =>\r\n            x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng,\r\n        ),\r\n        takeUntil(this._destroyed$),\r\n      )\r\n      .subscribe(details => this._updateBounds(details));\r\n  }\r\n\r\n  /*\r\n   Either the location changed, or visible status changed.\r\n   Possible state changes are\r\n   invisible -> visible\r\n   visible -> invisible\r\n   visible -> visible (new location)\r\n  */\r\n  private _updateBounds(newFitBoundsDetails?: FitBoundsDetails) {\r\n    // either visibility will change, or location, so remove the old one anyway\r\n    if (this._latestFitBoundsDetails) {\r\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\r\n      // don't set latestFitBoundsDetails to null, because we can toggle visibility from\r\n      // true -> false -> true, in which case we still need old value cached here\r\n    }\r\n\r\n    if (newFitBoundsDetails) {\r\n      this._latestFitBoundsDetails = newFitBoundsDetails;\r\n    }\r\n    if (!this._latestFitBoundsDetails) {\r\n      return;\r\n    }\r\n    if (this.agmFitBounds === true) {\r\n      this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this._destroyed$.next();\r\n    this._destroyed$.complete();\r\n    if (this._latestFitBoundsDetails !== null) {\r\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChange } from '@angular/core';\r\n\r\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\r\n\r\nimport { AgmMarker } from './marker';\r\n\r\nlet infoWindowId = 0;\r\n\r\n/**\r\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    .agm-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\r\n *        <agm-info-window [disableAutoPan]=\"true\">\r\n *          Hi, this is the content of the <strong>info window</strong>\r\n *        </agm-info-window>\r\n *      </agm-marker>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'agm-info-window',\r\n  template: `<div class='agm-info-window-content'>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n})\r\nexport class AgmInfoWindow implements OnDestroy, OnChanges, OnInit {\r\n  /**\r\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\r\n   * AgmMarker}).\r\n   */\r\n  @Input() latitude: number;\r\n\r\n  /**\r\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\r\n   * AgmMarker}).\r\n   */\r\n  @Input() longitude: number;\r\n\r\n  /**\r\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\r\n   * visible when it opens.\r\n   */\r\n  @Input() disableAutoPan: boolean;\r\n\r\n  /**\r\n   * All InfoWindows are displayed on the map in order of their zIndex, with higher values\r\n   * displaying in front of InfoWindows with lower values. By default, InfoWindows are displayed\r\n   * according to their latitude, with InfoWindows of lower latitudes appearing in front of\r\n   * InfoWindows at higher latitudes. InfoWindows are always displayed in front of markers.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\r\n   * if it is set before a call to open. To change the maximum width when changing content, call\r\n   * close, update maxWidth, and then open.\r\n   */\r\n  @Input() maxWidth: number;\r\n\r\n  /**\r\n   * Holds the marker that is the host of the info window (if available)\r\n   */\r\n  hostMarker: AgmMarker;\r\n\r\n  /**\r\n   * Holds the native element that is used for the info window content.\r\n   */\r\n  content: Node;\r\n\r\n  /**\r\n   * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\r\n   */\r\n  @Input() isOpen = false;\r\n\r\n  /**\r\n   * Emits an event when the info window is closed.\r\n   */\r\n  @Output() infoWindowClose: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  private static _infoWindowOptionsInputs: string[] = ['disableAutoPan', 'maxWidth'];\r\n  private _infoWindowAddedToManager = false;\r\n  private _id: string = (infoWindowId++).toString();\r\n\r\n  constructor(private _infoWindowManager: InfoWindowManager, private _el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\r\n    this._infoWindowManager.addInfoWindow(this);\r\n    this._infoWindowAddedToManager = true;\r\n    this._updateOpenState();\r\n    this._registerEventListeners();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\r\n    if (!this._infoWindowAddedToManager) {\r\n      return;\r\n    }\r\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\r\n        typeof this.longitude === 'number') {\r\n      this._infoWindowManager.setPosition(this);\r\n    }\r\n    if (changes['zIndex']) {\r\n      this._infoWindowManager.setZIndex(this);\r\n    }\r\n    if (changes['isOpen']) {\r\n      this._updateOpenState();\r\n    }\r\n    this._setInfoWindowOptions(changes);\r\n  }\r\n\r\n  private _registerEventListeners() {\r\n    this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\r\n      this.isOpen = false;\r\n      this.infoWindowClose.emit();\r\n    });\r\n  }\r\n\r\n  private _updateOpenState() {\r\n    this.isOpen ? this.open() : this.close();\r\n  }\r\n\r\n  private _setInfoWindowOptions(changes: {[key: string]: SimpleChange}) {\r\n    let options: {[propName: string]: any} = {};\r\n    let optionKeys = Object.keys(changes).filter(\r\n        k => AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\r\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\r\n    this._infoWindowManager.setOptions(this, options);\r\n  }\r\n\r\n  /**\r\n   * Opens the info window.\r\n   */\r\n  open(): Promise<void> { return this._infoWindowManager.open(this); }\r\n\r\n  /**\r\n   * Closes the info window.\r\n   */\r\n  close(): Promise<void> {\r\n    return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return 'AgmInfoWindow-' + this._id.toString(); }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\r\n}\r\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { KmlMouseEvent } from './../services/google-maps-types';\r\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n@Directive({\r\n  selector: 'agm-kml-layer',\r\n})\r\nexport class AgmKmlLayer implements OnInit, OnDestroy, OnChanges {\r\n  private _addedToManager = false;\r\n  private _id: string = (layerId++).toString();\r\n  private _subscriptions: Subscription[] = [];\r\n  private static _kmlLayerOptions: string[] =\r\n      ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\r\n\r\n  /**\r\n   * If true, the layer receives mouse events. Default value is true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * By default, the input map is centered and zoomed to the bounding box of the contents of the\r\n   * layer.\r\n   * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\r\n   * were never set.\r\n   */\r\n  @Input() preserveViewport = false;\r\n\r\n  /**\r\n   * Whether to render the screen overlays. Default true.\r\n   */\r\n  @Input() screenOverlays = true;\r\n\r\n  /**\r\n   * Suppress the rendering of info windows when layer features are clicked.\r\n   */\r\n  @Input() suppressInfoWindows = false;\r\n\r\n  /**\r\n   * The URL of the KML document to display.\r\n   */\r\n  @Input() url: string = null;\r\n\r\n  /**\r\n   * The z-index of the layer.\r\n   */\r\n  @Input() zIndex: number | null = null;\r\n\r\n  /**\r\n   * This event is fired when a feature in the layer is clicked.\r\n   */\r\n  @Output() layerClick: EventEmitter<KmlMouseEvent> = new EventEmitter<KmlMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the KML layers default viewport has changed.\r\n   */\r\n  @Output() defaultViewportChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * This event is fired when the KML layer has finished loading.\r\n   * At this point it is safe to read the status property to determine if the layer loaded\r\n   * successfully.\r\n   */\r\n  @Output() statusChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  constructor(private _manager: KmlLayerManager) {}\r\n\r\n  ngOnInit() {\r\n    if (this._addedToManager) {\r\n      return;\r\n    }\r\n    this._manager.addKmlLayer(this);\r\n    this._addedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this._addedToManager) {\r\n      return;\r\n    }\r\n    this._updatePolygonOptions(changes);\r\n  }\r\n\r\n  private _updatePolygonOptions(changes: SimpleChanges) {\r\n    const options = Object.keys(changes)\r\n                        .filter(k => AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1)\r\n                        .reduce((obj: any, k: string) => {\r\n                          obj[k] = changes[k].currentValue;\r\n                          return obj;\r\n                        }, {});\r\n    if (Object.keys(options).length > 0) {\r\n      this._manager.setOptions(this, options);\r\n    }\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const listeners = [\r\n      {name: 'click', handler: (ev: KmlMouseEvent) => this.layerClick.emit(ev)},\r\n      {name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit()},\r\n      {name: 'status_changed', handler: () => this.statusChange.emit()},\r\n    ];\r\n    listeners.forEach((obj) => {\r\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return `AgmKmlLayer-${this._id.toString()}`; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._manager.deleteKmlLayer(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach(s => s.unsubscribe());\r\n  }\r\n}\r\n","import { isPlatformServer } from '@angular/common';\r\nimport { Component, ElementRef, EventEmitter, Inject, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, PLATFORM_ID, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MouseEvent } from '../map-types';\r\nimport { FitBoundsService } from '../services/fit-bounds';\r\nimport { GoogleMapsAPIWrapper } from '../services/google-maps-api-wrapper';\r\nimport {\r\n  FullscreenControlOptions, LatLng, LatLngBounds, LatLngBoundsLiteral, LatLngLiteral,\r\n  MapRestriction, MapTypeControlOptions, MapTypeId, MapTypeStyle, Padding, PanControlOptions,\r\n  RotateControlOptions, ScaleControlOptions, StreetViewControlOptions, ZoomControlOptions,\r\n} from '../services/google-maps-types';\r\nimport { CircleManager } from '../services/managers/circle-manager';\r\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\r\nimport { LayerManager } from '../services/managers/layer-manager';\r\nimport { MarkerManager } from '../services/managers/marker-manager';\r\nimport { PolygonManager } from '../services/managers/polygon-manager';\r\nimport { PolylineManager } from '../services/managers/polyline-manager';\r\nimport { RectangleManager } from '../services/managers/rectangle-manager';\r\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\r\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\r\n\r\ndeclare var google: any;\r\n\r\n/**\r\n * AgmMap renders a Google Map.\r\n * **Important note**: To be able see a map in the browser, you have to define a height for the\r\n * element `agm-map`.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    agm-map {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'agm-map',\r\n  providers: [\r\n    CircleManager,\r\n    DataLayerManager,\r\n    DataLayerManager,\r\n    FitBoundsService,\r\n    GoogleMapsAPIWrapper,\r\n    InfoWindowManager,\r\n    KmlLayerManager,\r\n    LayerManager,\r\n    MarkerManager,\r\n    PolygonManager,\r\n    PolylineManager,\r\n    RectangleManager,\r\n  ],\r\n  host: {\r\n    // todo: deprecated - we will remove it with the next version\r\n    '[class.sebm-google-map-container]': 'true',\r\n  },\r\n  styles: [`\r\n    .agm-map-container-inner {\r\n      width: inherit;\r\n      height: inherit;\r\n    }\r\n    .agm-map-content {\r\n      display:none;\r\n    }\r\n  `],\r\n  template: `\r\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\r\n              <div class='agm-map-content'>\r\n                <ng-content></ng-content>\r\n              </div>\r\n  `,\r\n})\r\nexport class AgmMap implements OnChanges, OnInit, OnDestroy {\r\n  /**\r\n   * The longitude that defines the center of the map.\r\n   */\r\n  @Input() longitude = 0;\r\n\r\n  /**\r\n   * The latitude that defines the center of the map.\r\n   */\r\n  @Input() latitude = 0;\r\n\r\n  /**\r\n   * The zoom level of the map. The default zoom level is 8.\r\n   */\r\n  @Input() zoom = 8;\r\n\r\n  /**\r\n   * The minimal zoom level of the map allowed. When not provided, no restrictions to the zoom level\r\n   * are enforced.\r\n   */\r\n  @Input() minZoom: number;\r\n\r\n  /**\r\n   * The maximal zoom level of the map allowed. When not provided, no restrictions to the zoom level\r\n   * are enforced.\r\n   */\r\n  @Input() maxZoom: number;\r\n\r\n  /**\r\n   * The control size for the default map controls. Only governs the controls made by the Maps API itself\r\n   */\r\n  @Input() controlSize: number;\r\n\r\n  /**\r\n   * Enables/disables if map is draggable.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('mapDraggable') draggable = true;\r\n\r\n  /**\r\n   * Enables/disables zoom and center on double click. Enabled by default.\r\n   */\r\n  @Input() disableDoubleClickZoom = false;\r\n\r\n  /**\r\n   * Enables/disables all default UI of the Google map. Please note: When the map is created, this\r\n   * value cannot get updated.\r\n   */\r\n  @Input() disableDefaultUI = false;\r\n\r\n  /**\r\n   * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\r\n   */\r\n  @Input() scrollwheel = true;\r\n\r\n  /**\r\n   * Color used for the background of the Map div. This color will be visible when tiles have not\r\n   * yet loaded as the user pans. This option can only be set when the map is initialized.\r\n   */\r\n  @Input() backgroundColor: string;\r\n\r\n  /**\r\n   * The name or url of the cursor to display when mousing over a draggable map. This property uses\r\n   * the css  * cursor attribute to change the icon. As with the css property, you must specify at\r\n   * least one fallback cursor that is not a URL. For example:\r\n   * [draggableCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\r\n   */\r\n  @Input() draggableCursor: string;\r\n\r\n  /**\r\n   * The name or url of the cursor to display when the map is being dragged. This property uses the\r\n   * css cursor attribute to change the icon. As with the css property, you must specify at least\r\n   * one fallback cursor that is not a URL. For example:\r\n   * [draggingCursor]=\"'url(http://www.example.com/icon.png), auto;'\"\r\n   */\r\n  @Input() draggingCursor: string;\r\n\r\n  /**\r\n   * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\r\n   * enabled by default.\r\n   */\r\n  @Input() keyboardShortcuts = true;\r\n\r\n  /**\r\n   * The enabled/disabled state of the Zoom control.\r\n   */\r\n  @Input() zoomControl: boolean;\r\n\r\n  /**\r\n   * Options for the Zoom control.\r\n   */\r\n  @Input() zoomControlOptions: ZoomControlOptions;\r\n\r\n  /**\r\n   * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\r\n   * modes, these styles will only apply to labels and geometry.\r\n   */\r\n  @Input() styles: MapTypeStyle[] = [];\r\n\r\n  /**\r\n   * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\r\n   * used to\r\n   * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\r\n   */\r\n  @Input() usePanning = false;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Street View Pegman control.\r\n   * This control is part of the default UI, and should be set to false when displaying a map type\r\n   * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\r\n   */\r\n  @Input() streetViewControl: boolean;\r\n\r\n  /**\r\n   * Options for the Street View control.\r\n   */\r\n  @Input() streetViewControlOptions: StreetViewControlOptions;\r\n\r\n  /**\r\n   * Sets the viewport to contain the given bounds.\r\n   * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\r\n   */\r\n  @Input() fitBounds: LatLngBoundsLiteral | LatLngBounds | boolean = false;\r\n\r\n  /**\r\n   * Padding amount for the bounds.\r\n   */\r\n  @Input() fitBoundsPadding: number | Padding;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Scale control. This is disabled by default.\r\n   */\r\n  @Input() scaleControl = false;\r\n\r\n  /**\r\n   * Options for the scale control.\r\n   */\r\n  @Input() scaleControlOptions: ScaleControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Map type control.\r\n   */\r\n  @Input() mapTypeControl = false;\r\n\r\n  /**\r\n   * Options for the Map type control.\r\n   */\r\n  @Input() mapTypeControlOptions: MapTypeControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Pan control.\r\n   */\r\n  @Input() panControl  = false;\r\n\r\n  /**\r\n   * Options for the Pan control.\r\n   */\r\n  @Input() panControlOptions: PanControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Rotate control.\r\n   */\r\n  @Input() rotateControl = false;\r\n\r\n  /**\r\n   * Options for the Rotate control.\r\n   */\r\n  @Input() rotateControlOptions: RotateControlOptions;\r\n\r\n  /**\r\n   * The initial enabled/disabled state of the Fullscreen control.\r\n   */\r\n  @Input() fullscreenControl  = false;\r\n\r\n  /**\r\n   * Options for the Fullscreen control.\r\n   */\r\n  @Input() fullscreenControlOptions: FullscreenControlOptions;\r\n\r\n  /**\r\n   * The map mapTypeId. Defaults to 'roadmap'.\r\n   */\r\n  @Input() mapTypeId: 'roadmap' | 'hybrid' | 'satellite' | 'terrain' | string = 'roadmap';\r\n\r\n  /**\r\n   * When false, map icons are not clickable. A map icon represents a point of interest,\r\n   * also known as a POI. By default map icons are clickable.\r\n   */\r\n  @Input() clickableIcons = true;\r\n\r\n  /**\r\n   * A map icon represents a point of interest, also known as a POI.\r\n   * When map icons are clickable by default, an info window is displayed.\r\n   * When this property is set to false, the info window will not be shown but the click event\r\n   * will still fire\r\n   */\r\n  @Input() showDefaultInfoWindow = true;\r\n\r\n  /**\r\n   * This setting controls how gestures on the map are handled.\r\n   * Allowed values:\r\n   * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\r\n   * - 'greedy'      (All touch gestures pan or zoom the map.)\r\n   * - 'none'        (The map cannot be panned or zoomed by user gestures.)\r\n   * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\r\n   */\r\n  @Input() gestureHandling: 'cooperative' | 'greedy' | 'none' | 'auto' = 'auto';\r\n\r\n    /**\r\n     * Controls the automatic switching behavior for the angle of incidence of\r\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\r\n     * to always use a 0° overhead view regardless of the zoom level and\r\n     * viewport. The value 45 causes the tilt angle to automatically switch to\r\n     * 45 whenever 45° imagery is available for the current zoom level and\r\n     * viewport, and switch back to 0 whenever 45° imagery is not available\r\n     * (this is the default behavior). 45° imagery is only available for\r\n     * satellite and hybrid map types, within some locations, and at some zoom\r\n     * levels. Note: getTilt returns the current tilt angle, not the value\r\n     * specified by this option. Because getTilt and this option refer to\r\n     * different things, do not bind() the tilt property; doing so may yield\r\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\r\n     */\r\n  @Input() tilt = 0;\r\n\r\n  /**\r\n   * Options for restricting the bounds of the map.\r\n   * User cannot pan or zoom away from restricted area.\r\n   */\r\n  @Input() restriction: MapRestriction;\r\n  /**\r\n   * Map option attributes that can change over time\r\n   */\r\n  private static _mapOptionsAttributes: string[] = [\r\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\r\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\r\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\r\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\r\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\r\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\r\n  ];\r\n\r\n  private _observableSubscriptions: Subscription[] = [];\r\n  private _fitBoundsSubscription: Subscription;\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the map (but not when they click on a\r\n   * marker or infoWindow).\r\n   */\r\n  @Output() mapClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user right-clicks on the map (but not when they click\r\n   * on a marker or infoWindow).\r\n   */\r\n  @Output() mapRightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user double-clicks on the map (but not when they click\r\n   * on a marker or infoWindow).\r\n   */\r\n  @Output() mapDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter is fired when the map center changes.\r\n   */\r\n  @Output() centerChange: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\r\n\r\n  /**\r\n   * This event is fired when the viewport bounds have changed.\r\n   */\r\n  @Output() boundsChange: EventEmitter<LatLngBounds> = new EventEmitter<LatLngBounds>();\r\n\r\n  /**\r\n   * This event is fired when the mapTypeId property changes.\r\n   */\r\n  @Output() mapTypeIdChange: EventEmitter<MapTypeId> = new EventEmitter<MapTypeId>();\r\n\r\n  /**\r\n   * This event is fired when the map becomes idle after panning or zooming.\r\n   */\r\n  @Output() idle: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * This event is fired when the zoom level has changed.\r\n   */\r\n  @Output() zoomChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  /**\r\n   * This event is fired when the google map is fully initialized.\r\n   * You get the google.maps.Map instance as a result of this EventEmitter.\r\n   */\r\n  @Output() mapReady: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * This event is fired when the visible tiles have finished loading.\r\n   */\r\n  @Output() tilesLoaded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  constructor(\r\n    private _elem: ElementRef,\r\n    private _mapsWrapper: GoogleMapsAPIWrapper,\r\n    @Inject(PLATFORM_ID) private _platformId: Object,\r\n    protected _fitBoundsService: FitBoundsService,\r\n    private _zone: NgZone\r\n  ) {}\r\n\r\n  /** @internal */\r\n  ngOnInit() {\r\n    if (isPlatformServer(this._platformId)) {\r\n      // The code is running on the server, do nothing\r\n      return;\r\n    }\r\n    // todo: this should be solved with a new component and a viewChild decorator\r\n    const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\r\n    this._initMapInstance(container);\r\n  }\r\n\r\n  private _initMapInstance(el: HTMLElement) {\r\n    this._mapsWrapper.createMap(el, {\r\n      center: {lat: this.latitude || 0, lng: this.longitude || 0},\r\n      zoom: this.zoom,\r\n      minZoom: this.minZoom,\r\n      maxZoom: this.maxZoom,\r\n      controlSize: this.controlSize,\r\n      disableDefaultUI: this.disableDefaultUI,\r\n      disableDoubleClickZoom: this.disableDoubleClickZoom,\r\n      scrollwheel: this.scrollwheel,\r\n      backgroundColor: this.backgroundColor,\r\n      draggable: this.draggable,\r\n      draggableCursor: this.draggableCursor,\r\n      draggingCursor: this.draggingCursor,\r\n      keyboardShortcuts: this.keyboardShortcuts,\r\n      styles: this.styles,\r\n      zoomControl: this.zoomControl,\r\n      zoomControlOptions: this.zoomControlOptions,\r\n      streetViewControl: this.streetViewControl,\r\n      streetViewControlOptions: this.streetViewControlOptions,\r\n      scaleControl: this.scaleControl,\r\n      scaleControlOptions: this.scaleControlOptions,\r\n      mapTypeControl: this.mapTypeControl,\r\n      mapTypeControlOptions: this.mapTypeControlOptions,\r\n      panControl: this.panControl,\r\n      panControlOptions: this.panControlOptions,\r\n      rotateControl: this.rotateControl,\r\n      rotateControlOptions: this.rotateControlOptions,\r\n      fullscreenControl: this.fullscreenControl,\r\n      fullscreenControlOptions: this.fullscreenControlOptions,\r\n      mapTypeId: this.mapTypeId,\r\n      clickableIcons: this.clickableIcons,\r\n      gestureHandling: this.gestureHandling,\r\n      tilt: this.tilt,\r\n      restriction: this.restriction,\r\n    })\r\n      .then(() => this._mapsWrapper.getNativeMap())\r\n      .then(map => this.mapReady.emit(map));\r\n\r\n    // register event listeners\r\n    this._handleMapCenterChange();\r\n    this._handleMapZoomChange();\r\n    this._handleMapMouseEvents();\r\n    this._handleBoundsChange();\r\n    this._handleMapTypeIdChange();\r\n    this._handleTilesLoadedEvent();\r\n    this._handleIdleEvent();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    // unsubscribe all registered observable subscriptions\r\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\r\n\r\n    // remove all listeners from the map instance\r\n    this._mapsWrapper.clearInstanceListeners();\r\n    if (this._fitBoundsSubscription) {\r\n      this._fitBoundsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /* @internal */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this._updateMapOptionsChanges(changes);\r\n    this._updatePosition(changes);\r\n  }\r\n\r\n  private _updateMapOptionsChanges(changes: SimpleChanges) {\r\n    let options: {[propName: string]: any} = {};\r\n    let optionKeys =\r\n      Object.keys(changes).filter(k => AgmMap._mapOptionsAttributes.indexOf(k) !== -1);\r\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\r\n    this._mapsWrapper.setMapOptions(options);\r\n  }\r\n\r\n  /**\r\n   * Triggers a resize event on the google map instance.\r\n   * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\r\n   * Returns a promise that gets resolved after the event was triggered.\r\n   */\r\n  triggerResize(recenter: boolean = true): Promise<void> {\r\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\r\n    // common case for triggering a resize event), then the resize event would not\r\n    // work (to show the map), so we trigger the event in a timeout.\r\n    return new Promise<void>((resolve) => {\r\n      setTimeout(() => {\r\n        return this._mapsWrapper.triggerMapEvent('resize').then(() => {\r\n          if (recenter) {\r\n            this.fitBounds != null ? this._fitBounds() : this._setCenter();\r\n          }\r\n          resolve();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private _updatePosition(changes: SimpleChanges) {\r\n    if (changes['latitude'] == null && changes['longitude'] == null &&\r\n        !changes['fitBounds']) {\r\n      // no position update needed\r\n      return;\r\n    }\r\n\r\n    // we prefer fitBounds in changes\r\n    if ('fitBounds' in changes) {\r\n      this._fitBounds();\r\n      return;\r\n    }\r\n\r\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\r\n      return;\r\n    }\r\n    this._setCenter();\r\n  }\r\n\r\n  private _setCenter() {\r\n    let newCenter = {\r\n      lat: this.latitude,\r\n      lng: this.longitude,\r\n    };\r\n    if (this.usePanning) {\r\n      this._mapsWrapper.panTo(newCenter);\r\n    } else {\r\n      this._mapsWrapper.setCenter(newCenter);\r\n    }\r\n  }\r\n\r\n  private _fitBounds() {\r\n    switch (this.fitBounds) {\r\n      case true:\r\n        this._subscribeToFitBoundsUpdates();\r\n        break;\r\n      case false:\r\n        if (this._fitBoundsSubscription) {\r\n          this._fitBoundsSubscription.unsubscribe();\r\n        }\r\n        break;\r\n      default:\r\n        if (this._fitBoundsSubscription) {\r\n          this._fitBoundsSubscription.unsubscribe();\r\n        }\r\n        this._updateBounds(this.fitBounds, this.fitBoundsPadding);\r\n    }\r\n  }\r\n\r\n  private _subscribeToFitBoundsUpdates() {\r\n    this._zone.runOutsideAngular(() => {\r\n      this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\r\n        this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\r\n      });\r\n    });\r\n  }\r\n\r\n  protected _updateBounds(bounds: LatLngBounds | LatLngBoundsLiteral, padding?: number | Padding) {\r\n    if (!bounds) {\r\n      return;\r\n    }\r\n    if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\r\n      const newBounds = new google.maps.LatLngBounds();\r\n      newBounds.union(bounds);\r\n      bounds = newBounds;\r\n    }\r\n    if (this.usePanning) {\r\n      this._mapsWrapper.panToBounds(bounds, padding);\r\n      return;\r\n    }\r\n    this._mapsWrapper.fitBounds(bounds, padding);\r\n  }\r\n\r\n  private _isLatLngBoundsLiteral(bounds: LatLngBounds | LatLngBoundsLiteral): bounds is LatLngBoundsLiteral {\r\n    return bounds != null && (bounds as any).extend === undefined;\r\n  }\r\n\r\n  private _handleMapCenterChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('center_changed').subscribe(() => {\r\n      this._mapsWrapper.getCenter().then((center: LatLng) => {\r\n        this.latitude = center.lat();\r\n        this.longitude = center.lng();\r\n        this.centerChange.emit({lat: this.latitude, lng: this.longitude} as LatLngLiteral);\r\n      });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleBoundsChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('bounds_changed').subscribe(() => {\r\n      this._mapsWrapper.getBounds().then(\r\n        (bounds: LatLngBounds) => { this.boundsChange.emit(bounds); });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleMapTypeIdChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('maptypeid_changed').subscribe(() => {\r\n      this._mapsWrapper.getMapTypeId().then(\r\n        (mapTypeId: MapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleMapZoomChange() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('zoom_changed').subscribe(() => {\r\n      this._mapsWrapper.getZoom().then((z: number) => {\r\n        this.zoom = z;\r\n        this.zoomChange.emit(z);\r\n      });\r\n    });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleIdleEvent() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('idle').subscribe(\r\n      () => { this.idle.emit(void 0); });\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleTilesLoadedEvent() {\r\n    const s = this._mapsWrapper.subscribeToMapEvent<void>('tilesloaded').subscribe(\r\n      () => this.tilesLoaded.emit(void 0),\r\n    );\r\n    this._observableSubscriptions.push(s);\r\n  }\r\n\r\n  private _handleMapMouseEvents() {\r\n    interface Emitter {\r\n      emit(value: any): void;\r\n    }\r\n\r\n    type Event = { name: string, emitter: Emitter };\r\n\r\n    const events: Event[] = [\r\n      {name: 'click', emitter: this.mapClick},\r\n      {name: 'rightclick', emitter: this.mapRightClick},\r\n      {name: 'dblclick', emitter: this.mapDblClick},\r\n    ];\r\n\r\n    events.forEach((e: Event) => {\r\n      const s = this._mapsWrapper.subscribeToMapEvent<{latLng: LatLng}>(e.name).subscribe(\r\n        (event: {latLng: LatLng}) => {\r\n          let value: MouseEvent = {\r\n            coords: {\r\n              lat: event.latLng.lat(),\r\n              lng: event.latLng.lng(),\r\n            },\r\n            placeId: (event as {latLng: LatLng, placeId: string}).placeId,\r\n          };\r\n          // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\r\n          if (value.placeId && !this.showDefaultInfoWindow) {\r\n            (event as any).stop();\r\n          }\r\n          e.emitter.emit(value);\r\n        });\r\n      this._observableSubscriptions.push(s);\r\n    });\r\n  }\r\n}\r\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, forwardRef, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChange } from '@angular/core';\r\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\r\nimport { MouseEvent } from '../map-types';\r\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\r\nimport * as mapTypes from '../services/google-maps-types';\r\nimport { MarkerManager } from '../services/managers/marker-manager';\r\nimport { AgmInfoWindow } from './info-window';\r\n\r\nlet markerId = 0;\r\n\r\n/**\r\n * AgmMarker renders a map marker inside a {@link AgmMap}.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    .agm-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\r\n *      </agm-marker>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-marker',\r\n  providers: [\r\n    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker) },\r\n  ],\r\n  inputs: [\r\n    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\r\n    'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\r\n  ],\r\n  outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\r\n})\r\nexport class AgmMarker implements OnDestroy, OnChanges, AfterContentInit, FitBoundsAccessor {\r\n  /**\r\n   * The latitude position of the marker.\r\n   */\r\n  @Input() latitude: number;\r\n\r\n  /**\r\n   * The longitude position of the marker.\r\n   */\r\n  @Input() longitude: number;\r\n\r\n  /**\r\n   * The title of the marker.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * The label (a single uppercase character) for the marker.\r\n   */\r\n  @Input() label: string | mapTypes.MarkerLabel;\r\n\r\n  /**\r\n   * If true, the marker can be dragged. Default value is false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('markerDraggable') draggable = false;\r\n\r\n  /**\r\n   * Icon (the URL of the image) for the foreground.\r\n   */\r\n  @Input() iconUrl: string | mapTypes.MarkerIcon | mapTypes.GoogleSymbol;\r\n\r\n  /**\r\n   * If true, the marker is visible\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * Whether to automatically open the child info window when the marker is clicked.\r\n   */\r\n  @Input() openInfoWindow = true;\r\n\r\n  /**\r\n   * The marker's opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() opacity = 1;\r\n\r\n  /**\r\n   * All markers are displayed on the map in order of their zIndex, with higher values displaying in\r\n   * front of markers with lower values. By default, markers are displayed according to their\r\n   * vertical position on screen, with lower markers appearing in front of markers further up the\r\n   * screen.\r\n   */\r\n  @Input() zIndex = 1;\r\n\r\n  /**\r\n   * If true, the marker can be clicked. Default value is true.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('markerClickable') clickable = true;\r\n\r\n  /**\r\n   * Which animation to play when marker is added to a map.\r\n   * This can be 'BOUNCE' or 'DROP'\r\n   */\r\n  @Input() animation: Animation;\r\n\r\n  /**\r\n   * This event is fired when the marker's animation property changes.\r\n   *\r\n   * @memberof AgmMarker\r\n   */\r\n  @Output() animationChange = new EventEmitter<Animation>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the marker.\r\n   */\r\n  @Output() markerClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks twice on the marker.\r\n   */\r\n  @Output() markerDblClick: EventEmitter<AgmMarker> = new EventEmitter<AgmMarker>();\r\n\r\n  /**\r\n   * This event is fired when the user rightclicks on the marker.\r\n   */\r\n  @Output() markerRightClick: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the marker.\r\n   */\r\n  @Output() dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the marker.\r\n   */\r\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the marker.\r\n   */\r\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user mouses over the marker.\r\n   */\r\n  @Output() mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user mouses outside the marker.\r\n   */\r\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /** @internal */\r\n  @ContentChildren(AgmInfoWindow) infoWindow: QueryList<AgmInfoWindow> = new QueryList<AgmInfoWindow>();\r\n\r\n  private _markerAddedToManger = false;\r\n  private _id: string;\r\n  private _observableSubscriptions: Subscription[] = [];\r\n\r\n  protected readonly _fitBoundsDetails$: ReplaySubject<FitBoundsDetails> = new ReplaySubject<FitBoundsDetails>(1);\r\n\r\n  constructor(private _markerManager: MarkerManager) { this._id = (markerId++).toString(); }\r\n\r\n  /* @internal */\r\n  ngAfterContentInit() {\r\n    this.handleInfoWindowUpdate();\r\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\r\n  }\r\n\r\n  private handleInfoWindowUpdate() {\r\n    if (this.infoWindow.length > 1) {\r\n      throw new Error('Expected no more than one info window.');\r\n    }\r\n    this.infoWindow.forEach(marker => {\r\n      marker.hostMarker = this;\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\r\n    if (typeof this.latitude === 'string') {\r\n      this.latitude = Number(this.latitude);\r\n    }\r\n    if (typeof this.longitude === 'string') {\r\n      this.longitude = Number(this.longitude);\r\n    }\r\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\r\n      return;\r\n    }\r\n    if (!this._markerAddedToManger) {\r\n      this._markerManager.addMarker(this);\r\n      this._updateFitBoundsDetails();\r\n      this._markerAddedToManger = true;\r\n      this._addEventListeners();\r\n      return;\r\n    }\r\n    if (changes['latitude'] || changes['longitude']) {\r\n      this._markerManager.updateMarkerPosition(this);\r\n      this._updateFitBoundsDetails();\r\n    }\r\n    if (changes['title']) {\r\n      this._markerManager.updateTitle(this);\r\n    }\r\n    if (changes['label']) {\r\n      this._markerManager.updateLabel(this);\r\n    }\r\n    if (changes['draggable']) {\r\n      this._markerManager.updateDraggable(this);\r\n    }\r\n    if (changes['iconUrl']) {\r\n      this._markerManager.updateIcon(this);\r\n    }\r\n    if (changes['opacity']) {\r\n      this._markerManager.updateOpacity(this);\r\n    }\r\n    if (changes['visible']) {\r\n      this._markerManager.updateVisible(this);\r\n    }\r\n    if (changes['zIndex']) {\r\n      this._markerManager.updateZIndex(this);\r\n    }\r\n    if (changes['clickable']) {\r\n      this._markerManager.updateClickable(this);\r\n    }\r\n    if (changes['animation']) {\r\n      this._markerManager.updateAnimation(this);\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\r\n    return this._fitBoundsDetails$.asObservable();\r\n  }\r\n\r\n  protected _updateFitBoundsDetails() {\r\n    this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\r\n      if (this.openInfoWindow) {\r\n        this.infoWindow.forEach(infoWindow => infoWindow.open());\r\n      }\r\n      this.markerClick.emit(this);\r\n    });\r\n    this._observableSubscriptions.push(cs);\r\n\r\n    const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\r\n      this.markerDblClick.emit(null);\r\n    });\r\n    this._observableSubscriptions.push(dcs);\r\n\r\n    const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\r\n      this.markerRightClick.emit(null);\r\n    });\r\n    this._observableSubscriptions.push(rc);\r\n\r\n    const ds =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragstart', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(ds);\r\n\r\n    const d =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('drag', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(d);\r\n\r\n    const de =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('dragend', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(de);\r\n\r\n    const mover =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseover', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(mover);\r\n\r\n    const mout =\r\n      this._markerManager.createEventObservable<mapTypes.MouseEvent>('mouseout', this)\r\n        .subscribe((e: mapTypes.MouseEvent) => {\r\n          this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } } as MouseEvent);\r\n        });\r\n    this._observableSubscriptions.push(mout);\r\n\r\n    const anChng =\r\n      this._markerManager.createEventObservable<void>('animation_changed', this)\r\n        .subscribe(() => {\r\n          this.animationChange.emit(this.animation);\r\n        });\r\n    this._observableSubscriptions.push(anChng);\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return 'AgmMarker-' + this._id.toString(); }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._markerManager.deleteMarker(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._observableSubscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n}\r\n\r\nexport type Animation = 'BOUNCE' | 'DROP' | null;\r\n","import { AfterContentInit, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LatLng, LatLngLiteral, PolygonOptions, PolyMouseEvent } from '../services/google-maps-types';\r\nimport { PolygonManager } from '../services/managers/polygon-manager';\r\nimport { MvcEventType } from '../utils/mvcarray-utils';\r\n\r\n/**\r\n * AgmPolygon renders a polygon on a {@link AgmMap}\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    agm-map {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-polygon [paths]=\"paths\">\r\n *      </agm-polygon>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * export class MyMapCmp {\r\n *   lat: number = 0;\r\n *   lng: number = 0;\r\n *   zoom: number = 10;\r\n *   paths: Array<LatLngLiteral> = [\r\n *     { lat: 0,  lng: 10 },\r\n *     { lat: 0,  lng: 20 },\r\n *     { lat: 10, lng: 20 },\r\n *     { lat: 10, lng: 10 },\r\n *     { lat: 0,  lng: 10 }\r\n *   ]\r\n *   // Nesting paths will create a hole where they overlap;\r\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\r\n *     { lat: 0,  lng: 10 },\r\n *     { lat: 0,  lng: 20 },\r\n *     { lat: 10, lng: 20 },\r\n *     { lat: 10, lng: 10 },\r\n *     { lat: 0,  lng: 10 }\r\n *   ], [\r\n *     { lat: 0, lng: 15 },\r\n *     { lat: 0, lng: 20 },\r\n *     { lat: 5, lng: 20 },\r\n *     { lat: 5, lng: 15 },\r\n *     { lat: 0, lng: 15 }\r\n *   ]]\r\n * }\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-polygon',\r\n})\r\nexport class AgmPolygon implements OnDestroy, OnChanges, AfterContentInit {\r\n  /**\r\n   * Indicates whether this Polygon handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this shape over the map. The geodesic\r\n   * property defines the mode of dragging. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('polyDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this shape by dragging the control\r\n   * points shown at the vertices and on each segment. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * The fill color. All CSS3 colors are supported except for extended\r\n   * named colors.\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The fill opacity between 0.0 and 1.0\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * When true, edges of the polygon are interpreted as geodesic and will\r\n   * follow the curvature of the Earth. When false, edges of the polygon are\r\n   * rendered as straight lines in screen space. Note that the shape of a\r\n   * geodesic polygon may appear to change when dragged, as the dimensions\r\n   * are maintained relative to the surface of the earth. Defaults to false.\r\n   */\r\n  @Input() geodesic = false;\r\n\r\n  /**\r\n   * The ordered sequence of coordinates that designates a closed loop.\r\n   * Unlike polylines, a polygon may consist of one or more paths.\r\n   *  As a result, the paths property may specify one or more arrays of\r\n   * LatLng coordinates. Paths are closed automatically; do not repeat the\r\n   * first vertex of the path as the last vertex. Simple polygons may be\r\n   * defined using a single array of LatLngs. More complex polygons may\r\n   * specify an array of arrays. Any simple arrays are converted into Arrays.\r\n   * Inserting or removing LatLngs from the Array will automatically update\r\n   * the polygon on the map.\r\n   */\r\n  @Input() paths: Array<LatLng | LatLngLiteral> | Array<Array<LatLng | LatLngLiteral>> = [];\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended\r\n   * named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight: number;\r\n\r\n  /**\r\n   * Whether this polygon is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible: boolean;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the DOM click event is fired on the Polygon.\r\n   */\r\n  @Output() polyClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM dblclick event is fired on the Polygon.\r\n   */\r\n  @Output() polyDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the polygon.\r\n   */\r\n  @Output() polyDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the polygon.\r\n   */\r\n  @Output() polyDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the polygon.\r\n   */\r\n  @Output() polyDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the Polygon.\r\n   */\r\n  @Output() polyMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the Polygon.\r\n   */\r\n  @Output() polyMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polygon mouseout.\r\n   */\r\n  @Output() polyMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polygon mouseover.\r\n   */\r\n  @Output() polyMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired whe the DOM mouseup event is fired on the Polygon\r\n   */\r\n  @Output() polyMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the Polygon is right-clicked on.\r\n   */\r\n  @Output() polyRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired after Polygon first path changes.\r\n   */\r\n  @Output() polyPathsChange = new EventEmitter<PolygonPathEvent<any>>();\r\n\r\n  private static _polygonOptionsAttributes: Array<string> = [\r\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\r\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\r\n    'editable', 'visible',\r\n  ];\r\n\r\n  private _id: string;\r\n  private _polygonAddedToManager = false;\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _polygonManager: PolygonManager) { }\r\n\r\n  /** @internal */\r\n  ngAfterContentInit() {\r\n    if (!this._polygonAddedToManager) {\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): any {\r\n    if (!this._polygonAddedToManager) {\r\n      this._init();\r\n      return;\r\n    }\r\n\r\n    this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\r\n  }\r\n\r\n  private _init() {\r\n    this._polygonManager.addPolygon(this);\r\n    this._polygonAddedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const handlers = [\r\n      { name: 'click', handler: (ev: PolyMouseEvent) => this.polyClick.emit(ev) },\r\n      { name: 'dblclick', handler: (ev: PolyMouseEvent) => this.polyDblClick.emit(ev) },\r\n      { name: 'drag', handler: (ev: MouseEvent) => this.polyDrag.emit(ev) },\r\n      { name: 'dragend', handler: (ev: MouseEvent) => this.polyDragEnd.emit(ev) },\r\n      { name: 'dragstart', handler: (ev: MouseEvent) => this.polyDragStart.emit(ev) },\r\n      { name: 'mousedown', handler: (ev: PolyMouseEvent) => this.polyMouseDown.emit(ev) },\r\n      { name: 'mousemove', handler: (ev: PolyMouseEvent) => this.polyMouseMove.emit(ev) },\r\n      { name: 'mouseout', handler: (ev: PolyMouseEvent) => this.polyMouseOut.emit(ev) },\r\n      { name: 'mouseover', handler: (ev: PolyMouseEvent) => this.polyMouseOver.emit(ev) },\r\n      { name: 'mouseup', handler: (ev: PolyMouseEvent) => this.polyMouseUp.emit(ev) },\r\n      { name: 'rightclick', handler: (ev: PolyMouseEvent) => this.polyRightClick.emit(ev) },\r\n    ];\r\n    handlers.forEach((obj) => {\r\n      const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n\r\n    this._polygonManager.createPathEventObservable(this)\r\n    .then(paths$ => {\r\n      const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  private _updatePolygonOptions(changes: SimpleChanges): PolygonOptions {\r\n    return Object.keys(changes)\r\n      .filter(k => AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1)\r\n      .reduce((obj: any, k: string) => {\r\n        obj[k] = changes[k].currentValue;\r\n        return obj;\r\n      }, {});\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._polygonManager.deletePolygon(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n\r\n  getPath(): Promise<Array<LatLng>> {\r\n    return this._polygonManager.getPath(this);\r\n  }\r\n\r\n  getPaths(): Promise<Array<Array<LatLng>>> {\r\n    return this._polygonManager.getPaths(this);\r\n  }\r\n}\r\n\r\nexport interface PolygonPathEvent<T extends (LatLng | Array<LatLng>)> {\r\n  newArr: LatLng[][];\r\n  eventName: MvcEventType;\r\n  index: number;\r\n  previous?: T;\r\n}\r\n\r\nexport interface PathCollectionChangePolygonPathEvent extends PolygonPathEvent <Array<LatLng>>{\r\n}\r\n\r\nexport interface PathChangePolygonPathEvent extends PolygonPathEvent<LatLng> {\r\n  pathIndex: number;\r\n}\r\n","import { Directive, Input, OnInit } from '@angular/core';\r\n\r\n/**\r\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\r\n * or custom icons either along the entire line, or in a specific part of it.\r\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\r\n *\r\n * ### Example\r\n * ```html\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-polyline>\r\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\r\n *          </agm-icon-sequence>\r\n *      </agm-polyline>\r\n *    </agm-map>\r\n * ```\r\n *\r\n * @export\r\n * @class AgmPolylineIcon\r\n */\r\n@Directive({selector: 'agm-polyline agm-icon-sequence'})\r\nexport class AgmPolylineIcon implements OnInit{\r\n\r\n  /**\r\n   * If `true`, each icon in the sequence has the same fixed rotation regardless of the\r\n   * angle of the edge on which it lies. Defaults to `false`, in which case each icon\r\n   * in the sequence is rotated to align with its edge.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() fixedRotation: boolean;\r\n\r\n  /**\r\n   * The distance from the start of the line at which an icon is to be rendered. This\r\n   * distance may be expressed as a percentage of line's length (e.g. '50%') or in pixels\r\n   * (e.g. '50px'). Defaults to '100%'.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() offset: string;\r\n\r\n  /**\r\n   * The distance between consecutive icons on the line. This distance may be expressed as\r\n   * a percentage of the line's length (e.g. '50%') or in pixels (e.g. '50px'). To disable\r\n   * repeating of the icon, specify '0'. Defaults to '0'.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() repeat: string;\r\n\r\n  /**\r\n   * The x coordinate of the position of the symbol relative to the polyline. The coordinate\r\n   * of the symbol's path is translated _left_ by the anchor's x coordinate. By default, a\r\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\r\n   * symbol's path.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() anchorX: number;\r\n\r\n  /**\r\n   * The y coordinate of the position of the symbol relative to the polyline. The coordinate\r\n   * of the symbol's path is translated _up_ by the anchor's y coordinate. By default, a\r\n   * symbol is anchored at (0, 0). The position is expressed in the same coordinate system as the\r\n   * symbol's path.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() anchorY: number;\r\n\r\n  /**\r\n   * The symbol's fill color. All CSS3 colors are supported except for extended named\r\n   * colors. Defaults to the stroke color of the corresponding polyline.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The symbol's fill opacity. Defaults to 0.\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * The symbol's path, which is a built-in symbol path, or a custom path expressed using\r\n   * SVG path notation. Required.\r\n   *\r\n   * @type {SymbolPath}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() path: 'CIRCLE' | 'BACKWARD_CLOSED_ARROW' | 'BACKWARD_OPEN_ARROW' | 'FORWARD_CLOSED_ARROW' |\r\n        'FORWARD_OPEN_ARROW' | string;\r\n\r\n  /**\r\n   * The angle by which to rotate the symbol, expressed clockwise in degrees.\r\n   * Defaults to 0. A symbol where `fixedRotation` is `false` is rotated relative to\r\n   * the angle of the edge on which it lies.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() rotation: number;\r\n\r\n  /**\r\n   * The amount by which the symbol is scaled in size. Defaults to the stroke weight\r\n   * of the polyline; after scaling, the symbol must lie inside a square 22 pixels in\r\n   * size centered at the symbol's anchor.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() scale: number;\r\n\r\n  /**\r\n   * The symbol's stroke color. All CSS3 colors are supported except for extended named\r\n   * colors. Defaults to the stroke color of the polyline.\r\n   *\r\n   * @type {string}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The symbol's stroke opacity. Defaults to the stroke opacity of the polyline.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The symbol's stroke weight. Defaults to the scale of the symbol.\r\n   *\r\n   * @type {number}\r\n   * @memberof AgmPolylineIcon\r\n   */\r\n  @Input() strokeWeight: number;\r\n\r\n  ngOnInit(): void {\r\n    if (this.path == null) {\r\n      throw new Error('Icon Sequence path is required');\r\n    }\r\n  }\r\n}\r\n","import { Directive, EventEmitter, forwardRef, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { FitBoundsAccessor, FitBoundsDetails } from '../services/fit-bounds';\r\nimport { LatLngLiteral } from '../services/google-maps-types';\r\n\r\n/**\r\n * AgmPolylinePoint represents one element of a polyline within a  {@link\r\n * AgmPolyline}\r\n */\r\n@Directive({\r\n  selector: 'agm-polyline-point',\r\n  providers: [\r\n    {provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint)},\r\n  ],\r\n})\r\nexport class AgmPolylinePoint implements OnChanges, FitBoundsAccessor {\r\n  /**\r\n   * The latitude position of the point.\r\n   */\r\n  @Input() public latitude: number;\r\n\r\n  /**\r\n   * The longitude position of the point;\r\n   */\r\n  @Input() public longitude: number;\r\n\r\n  /**\r\n   * This event emitter gets emitted when the position of the point changed.\r\n   */\r\n  @Output() positionChanged: EventEmitter<LatLngLiteral> = new EventEmitter<LatLngLiteral>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): any {\r\n    if (changes['latitude'] || changes['longitude']) {\r\n      const position: LatLngLiteral = {\r\n        lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\r\n        lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\r\n      } as LatLngLiteral;\r\n      this.positionChanged.emit(position);\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  getFitBoundsDetails$(): Observable<FitBoundsDetails> {\r\n    return this.positionChanged.pipe(\r\n      startWith({lat: this.latitude, lng: this.longitude}),\r\n      map(position => ({latLng: position}))\r\n    );\r\n  }\r\n}\r\n","import { AfterContentInit, ContentChildren, Directive, EventEmitter, Input, OnChanges, OnDestroy, Output, QueryList, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { LatLng, PolyMouseEvent } from '../services/google-maps-types';\r\nimport { PolylineManager } from '../services/managers/polyline-manager';\r\nimport { AgmPolylineIcon } from './polyline-icon';\r\nimport { AgmPolylinePoint } from './polyline-point';\r\n\r\nlet polylineId = 0;\r\n/**\r\n * AgmPolyline renders a polyline on a {@link AgmMap}\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import { Component } from '@angular/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  styles: [`\r\n *    .agm-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <agm-polyline>\r\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\r\n *          </agm-polyline-point>\r\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\r\n *          </agm-polyline-point>\r\n *      </agm-polyline>\r\n *    </agm-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Directive({\r\n  selector: 'agm-polyline',\r\n})\r\nexport class AgmPolyline implements OnDestroy, OnChanges, AfterContentInit {\r\n  /**\r\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\r\n   * mode of dragging. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('polylineDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this shape by dragging the control points shown at the\r\n   * vertices and on each segment. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\r\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\r\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\r\n   * are maintained relative to the surface of the earth. Defaults to false.\r\n   */\r\n  @Input() geodesic = false;\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight: number;\r\n\r\n  /**\r\n   * Whether this polyline is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the DOM click event is fired on the Polyline.\r\n   */\r\n  @Output() lineClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\r\n   */\r\n  @Output() lineDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the polyline.\r\n   */\r\n  @Output() lineDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the polyline.\r\n   */\r\n  @Output() lineDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the polyline.\r\n   */\r\n  @Output() lineDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\r\n   */\r\n  @Output() lineMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\r\n   */\r\n  @Output() lineMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polyline mouseout.\r\n   */\r\n  @Output() lineMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on Polyline mouseover.\r\n   */\r\n  @Output() lineMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\r\n   */\r\n  @Output() lineMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the Polyline is right-clicked on.\r\n   */\r\n  @Output() lineRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\r\n\r\n  /**\r\n   * This event is fired after Polyline's path changes.\r\n   */\r\n  @Output() polyPathChange = new EventEmitter<PathEvent>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  @ContentChildren(AgmPolylinePoint) points: QueryList<AgmPolylinePoint>;\r\n\r\n  @ContentChildren(AgmPolylineIcon) iconSequences: QueryList<AgmPolylineIcon>;\r\n\r\n  private static _polylineOptionsAttributes: Array<string> = [\r\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\r\n    'zIndex',\r\n  ];\r\n\r\n  private _id: string;\r\n  private _polylineAddedToManager = false;\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n  constructor(private _polylineManager: PolylineManager) { this._id = (polylineId++).toString(); }\r\n\r\n  /** @internal */\r\n  ngAfterContentInit() {\r\n    if (this.points.length) {\r\n      this.points.forEach((point: AgmPolylinePoint) => {\r\n        const s = point.positionChanged.subscribe(\r\n            () => { this._polylineManager.updatePolylinePoints(this); });\r\n        this._subscriptions.push(s);\r\n      });\r\n    }\r\n    if (!this._polylineAddedToManager) {\r\n      this._init();\r\n    }\r\n    const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\r\n    this._subscriptions.push(pointSub);\r\n    this._polylineManager.updatePolylinePoints(this);\r\n\r\n    const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\r\n    this._subscriptions.push(iconSub);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): any {\r\n    if (!this._polylineAddedToManager) {\r\n      this._init();\r\n      return;\r\n    }\r\n\r\n    let options: {[propName: string]: any} = {};\r\n    const optionKeys = Object.keys(changes).filter(\r\n        k => AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\r\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\r\n    this._polylineManager.setPolylineOptions(this, options);\r\n  }\r\n\r\n  getPath(): Promise<Array<LatLng>> {\r\n    return this._polylineManager.getPath(this);\r\n  }\r\n\r\n  private _init() {\r\n    this._polylineManager.addPolyline(this);\r\n    this._polylineAddedToManager = true;\r\n    this._addEventListeners();\r\n  }\r\n\r\n  private _addEventListeners() {\r\n    const handlers = [\r\n      {name: 'click', handler: (ev: PolyMouseEvent) => this.lineClick.emit(ev)},\r\n      {name: 'dblclick', handler: (ev: PolyMouseEvent) => this.lineDblClick.emit(ev)},\r\n      {name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev)},\r\n      {name: 'dragend', handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev)},\r\n      {name: 'dragstart', handler: (ev: MouseEvent) => this.lineDragStart.emit(ev)},\r\n      {name: 'mousedown', handler: (ev: PolyMouseEvent) => this.lineMouseDown.emit(ev)},\r\n      {name: 'mousemove', handler: (ev: PolyMouseEvent) => this.lineMouseMove.emit(ev)},\r\n      {name: 'mouseout', handler: (ev: PolyMouseEvent) => this.lineMouseOut.emit(ev)},\r\n      {name: 'mouseover', handler: (ev: PolyMouseEvent) => this.lineMouseOver.emit(ev)},\r\n      {name: 'mouseup', handler: (ev: PolyMouseEvent) => this.lineMouseUp.emit(ev)},\r\n      {name: 'rightclick', handler: (ev: PolyMouseEvent) => this.lineRightClick.emit(ev)},\r\n    ];\r\n    handlers.forEach((obj) => {\r\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\r\n      this._subscriptions.push(os);\r\n    });\r\n\r\n    this._polylineManager.createPathEventObservable(this).then((ob$) => {\r\n      const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\r\n      this._subscriptions.push(os);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  _getPoints(): Array<AgmPolylinePoint> {\r\n    if (this.points) {\r\n      return this.points.toArray();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  _getIcons(): Array<AgmPolylineIcon> {\r\n    if (this.iconSequences) {\r\n      return this.iconSequences.toArray();\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._polylineManager.deletePolyline(this);\r\n    // unsubscribe all registered observable subscriptions\r\n    this._subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n}\r\n\r\nexport interface PathEvent {\r\n  newArr: LatLng[];\r\n  evName: 'insert_at' | 'remove_at' | 'set_at';\r\n  index: number;\r\n  previous?: LatLng;\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { MouseEvent } from '../map-types';\r\nimport {\r\n  LatLngBounds,\r\n  LatLngBoundsLiteral,\r\n  MouseEvent as MapMouseEvent,\r\n} from '../services/google-maps-types';\r\nimport { RectangleManager } from '../services/managers/rectangle-manager';\r\n\r\n@Directive({\r\n  selector: 'agm-rectangle',\r\n})\r\nexport class AgmRectangle implements OnInit, OnChanges, OnDestroy {\r\n  /**\r\n   * The north position of the rectangle (required).\r\n   */\r\n  @Input() north: number;\r\n\r\n  /**\r\n   * The east position of the rectangle (required).\r\n   */\r\n  @Input() east: number;\r\n\r\n  /**\r\n   * The south position of the rectangle (required).\r\n   */\r\n  @Input() south: number;\r\n\r\n  /**\r\n   * The west position of the rectangle (required).\r\n   */\r\n  @Input() west: number;\r\n\r\n  /**\r\n   * Indicates whether this Rectangle handles mouse events. Defaults to true.\r\n   */\r\n  @Input() clickable = true;\r\n\r\n  /**\r\n   * If set to true, the user can drag this rectangle over the map. Defaults to false.\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('rectangleDraggable') draggable = false;\r\n\r\n  /**\r\n   * If set to true, the user can edit this rectangle by dragging the control points shown at\r\n   * the center and around the circumference of the rectangle. Defaults to false.\r\n   */\r\n  @Input() editable = false;\r\n\r\n  /**\r\n   * The fill color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() fillColor: string;\r\n\r\n  /**\r\n   * The fill opacity between 0.0 and 1.0.\r\n   */\r\n  @Input() fillOpacity: number;\r\n\r\n  /**\r\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\r\n   */\r\n  @Input() strokeColor: string;\r\n\r\n  /**\r\n   * The stroke opacity between 0.0 and 1.0\r\n   */\r\n  @Input() strokeOpacity: number;\r\n\r\n  /**\r\n   * The stroke position. Defaults to CENTER.\r\n   * This property is not supported on Internet Explorer 8 and earlier.\r\n   */\r\n  @Input() strokePosition: 'CENTER' | 'INSIDE' | 'OUTSIDE' = 'CENTER';\r\n\r\n  /**\r\n   * The stroke width in pixels.\r\n   */\r\n  @Input() strokeWeight = 0;\r\n\r\n  /**\r\n   * Whether this rectangle is visible on the map. Defaults to true.\r\n   */\r\n  @Input() visible = true;\r\n\r\n  /**\r\n   * The zIndex compared to other polys.\r\n   */\r\n  @Input() zIndex: number;\r\n\r\n  /**\r\n   * This event is fired when the rectangle's is changed.\r\n   */\r\n  @Output()\r\n  boundsChange: EventEmitter<LatLngBoundsLiteral> = new EventEmitter<\r\n    LatLngBoundsLiteral\r\n  >();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the rectangle.\r\n   */\r\n  @Output()\r\n  rectangleClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event emitter gets emitted when the user clicks on the rectangle.\r\n   */\r\n  @Output()\r\n  rectangleDblClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is repeatedly fired while the user drags the rectangle.\r\n   */\r\n  @Output() drag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user stops dragging the rectangle.\r\n   */\r\n  @Output() dragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the user starts dragging the rectangle.\r\n   */\r\n  @Output()\r\n  dragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousedown event is fired on the rectangle.\r\n   */\r\n  @Output()\r\n  mouseDown: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mousemove event is fired on the rectangle.\r\n   */\r\n  @Output()\r\n  mouseMove: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on rectangle mouseout.\r\n   */\r\n  @Output() mouseOut: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired on rectangle mouseover.\r\n   */\r\n  @Output()\r\n  mouseOver: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the DOM mouseup event is fired on the rectangle.\r\n   */\r\n  @Output() mouseUp: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * This event is fired when the rectangle is right-clicked on.\r\n   */\r\n  @Output()\r\n  rightClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  private _rectangleAddedToManager = false;\r\n\r\n  private static _mapOptions: string[] = [\r\n    'fillColor',\r\n    'fillOpacity',\r\n    'strokeColor',\r\n    'strokeOpacity',\r\n    'strokePosition',\r\n    'strokeWeight',\r\n    'visible',\r\n    'zIndex',\r\n    'clickable',\r\n  ];\r\n\r\n  private _eventSubscriptions: Subscription[] = [];\r\n\r\n  constructor(private _manager: RectangleManager) {}\r\n\r\n  /** @internal */\r\n  ngOnInit() {\r\n    this._manager.addRectangle(this);\r\n    this._rectangleAddedToManager = true;\r\n    this._registerEventListeners();\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: { [key: string]: SimpleChange }) {\r\n    if (!this._rectangleAddedToManager) {\r\n      return;\r\n    }\r\n    if (\r\n      changes['north'] ||\r\n      changes['east'] ||\r\n      changes['south'] ||\r\n      changes['west']\r\n    ) {\r\n      this._manager.setBounds(this);\r\n    }\r\n    if (changes['editable']) {\r\n      this._manager.setEditable(this);\r\n    }\r\n    if (changes['draggable']) {\r\n      this._manager.setDraggable(this);\r\n    }\r\n    if (changes['visible']) {\r\n      this._manager.setVisible(this);\r\n    }\r\n    this._updateRectangleOptionsChanges(changes);\r\n  }\r\n\r\n  private _updateRectangleOptionsChanges(changes: {\r\n    [propName: string]: SimpleChange;\r\n  }) {\r\n    let options: { [propName: string]: any } = {};\r\n    let optionKeys = Object.keys(changes).filter(\r\n      k => AgmRectangle._mapOptions.indexOf(k) !== -1,\r\n    );\r\n    optionKeys.forEach(k => {\r\n      options[k] = changes[k].currentValue;\r\n    });\r\n    if (optionKeys.length > 0) {\r\n      this._manager.setOptions(this, options);\r\n    }\r\n  }\r\n\r\n  private _registerEventListeners() {\r\n    let events: Map<string, EventEmitter<any>> = new Map<\r\n      string,\r\n      EventEmitter<any>\r\n    >();\r\n    events.set('bounds_changed', this.boundsChange);\r\n    events.set('click', this.rectangleClick);\r\n    events.set('dblclick', this.rectangleDblClick);\r\n    events.set('drag', this.drag);\r\n    events.set('dragend', this.dragEnd);\r\n    events.set('dragStart', this.dragStart);\r\n    events.set('mousedown', this.mouseDown);\r\n    events.set('mousemove', this.mouseMove);\r\n    events.set('mouseout', this.mouseOut);\r\n    events.set('mouseover', this.mouseOver);\r\n    events.set('mouseup', this.mouseUp);\r\n    events.set('rightclick', this.rightClick);\r\n\r\n    events.forEach((eventEmitter, eventName) => {\r\n      this._eventSubscriptions.push(\r\n        this._manager\r\n          .createEventObservable<MapMouseEvent>(eventName, this)\r\n          .subscribe(value => {\r\n            switch (eventName) {\r\n              case 'bounds_changed':\r\n                this._manager.getBounds(this).then(bounds =>\r\n                  eventEmitter.emit({\r\n                    north: bounds.getNorthEast().lat(),\r\n                    east: bounds.getNorthEast().lng(),\r\n                    south: bounds.getSouthWest().lat(),\r\n                    west: bounds.getSouthWest().lng(),\r\n                  } as LatLngBoundsLiteral),\r\n                );\r\n                break;\r\n              default:\r\n                eventEmitter.emit({\r\n                  coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\r\n                } as MouseEvent);\r\n            }\r\n          }),\r\n      );\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() {\r\n    this._eventSubscriptions.forEach(function(s: Subscription) {\r\n      s.unsubscribe();\r\n    });\r\n    this._eventSubscriptions = null;\r\n    this._manager.removeRectangle(this);\r\n  }\r\n\r\n  /**\r\n   * Gets the LatLngBounds of this Rectangle.\r\n   */\r\n  getBounds(): Promise<LatLngBounds> {\r\n    return this._manager.getBounds(this);\r\n  }\r\n}\r\n","import { Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LayerManager } from '../services/managers/layer-manager';\r\n\r\nlet layerId = 0;\r\n\r\n/*\r\n * This directive adds a transit layer to a google map instance\r\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\r\n * */\r\n@Directive({\r\n    selector: 'agm-transit-layer',\r\n})\r\n\r\nexport class AgmTransitLayer implements OnInit, OnChanges, OnDestroy{\r\n    private _addedToManager = false;\r\n    private _id: string = (layerId++).toString();\r\n\r\n    /**\r\n     * Hide/show transit layer\r\n     */\r\n    @Input() visible = true;\r\n\r\n    constructor( private _manager: LayerManager ) {}\r\n\r\n    ngOnInit() {\r\n        if (this._addedToManager) {\r\n            return;\r\n        }\r\n        this._manager.addTransitLayer(this, {visible: this.visible});\r\n        this._addedToManager = true;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this._addedToManager) {\r\n            return;\r\n        }\r\n        if (changes['visible'] != null) {\r\n            this._manager.toggleLayerVisibility(this, {visible: changes['visible'].currentValue});\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    id(): string { return this._id; }\r\n\r\n    /** @internal */\r\n    toString(): string { return `AgmTransitLayer-${this._id.toString()}`; }\r\n\r\n    /** @internal */\r\n    ngOnDestroy() {\r\n        this._manager.deleteLayer(this);\r\n    }\r\n\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { AgmBicyclingLayer } from './directives/bicycling-layer';\r\nimport { AgmCircle } from './directives/circle';\r\nimport { AgmDataLayer } from './directives/data-layer';\r\nimport { AgmFitBounds } from './directives/fit-bounds';\r\nimport { AgmInfoWindow } from './directives/info-window';\r\nimport { AgmKmlLayer } from './directives/kml-layer';\r\nimport { AgmMap } from './directives/map';\r\nimport { AgmMarker } from './directives/marker';\r\nimport { AgmPolygon } from './directives/polygon';\r\nimport { AgmPolyline } from './directives/polyline';\r\nimport { AgmPolylineIcon } from './directives/polyline-icon';\r\nimport { AgmPolylinePoint } from './directives/polyline-point';\r\nimport { AgmRectangle } from './directives/rectangle';\r\nimport { AgmTransitLayer } from './directives/transit-layer';\r\n\r\nimport { LazyMapsAPILoader, LazyMapsAPILoaderConfigLiteral, LAZY_MAPS_API_CONFIG } from './services/maps-api-loader/lazy-maps-api-loader';\r\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\r\n\r\nimport { BROWSER_GLOBALS_PROVIDERS } from './utils/browser-globals';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport function coreDirectives() {\r\n  return [\r\n    AgmBicyclingLayer,\r\n    AgmCircle,\r\n    AgmDataLayer,\r\n    AgmFitBounds,\r\n    AgmInfoWindow,\r\n    AgmKmlLayer,\r\n    AgmMap,\r\n    AgmMarker,\r\n    AgmPolygon,\r\n    AgmPolyline,\r\n    AgmPolylineIcon,\r\n    AgmPolylinePoint,\r\n    AgmRectangle,\r\n    AgmTransitLayer,\r\n  ];\r\n}\r\n/**\r\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\r\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\r\n */\r\n@NgModule({declarations: coreDirectives(), exports: coreDirectives()})\r\nexport class AgmCoreModule {\r\n  /**\r\n   * Please use this method when you register the module at the root level.\r\n   */\r\n  static forRoot(lazyMapsAPILoaderConfig?: LazyMapsAPILoaderConfigLiteral): ModuleWithProviders<AgmCoreModule> {\r\n    return {\r\n      ngModule: AgmCoreModule,\r\n      providers: [\r\n        ...BROWSER_GLOBALS_PROVIDERS, {provide: MapsAPILoader, useClass: LazyMapsAPILoader},\r\n        {provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig},\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of core\r\n */\r\nexport * from './lib/map-types';\r\nexport * from './lib/services';\r\nexport * from './lib/directives';\r\nexport * from './lib/core.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["google","i1.MapsAPILoader","i1.GoogleMapsAPIWrapper","i1.WindowRef","i1.DocumentRef","i2.MarkerManager","layerId","i1.LayerManager","i1.CircleManager","i1.DataLayerManager","i1.FitBoundsAccessor","i1.FitBoundsService","i1.InfoWindowManager","i1.KmlLayerManager","i2.FitBoundsService","i1.MarkerManager","i1.PolygonManager","i1.PolylineManager","i1.RectangleManager"],"mappings":"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"}